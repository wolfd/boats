(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    184316,       3649]
NotebookOptionsPosition[    181831,       3570]
NotebookOutlinePosition[    182194,       3586]
CellTagsIndexPosition[    182151,       3583]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"Begin", "[", "\"\<BoatContext`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"libboatLocation", "=", "\"\</home/wolf/qea/libboat.nb\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"libboat", "=", 
   RowBox[{"NotebookOpen", "[", "libboatLocation", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SelectionMove", "[", 
   RowBox[{"libboat", ",", "All", ",", "Notebook"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SelectionEvaluate", "[", "libboat", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<CUDALink`\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6646957484682083`*^9, 3.66469578130228*^9}, {
   3.66469585647468*^9, 3.664695944589684*^9}, {3.664695977412403*^9, 
   3.664696015722187*^9}, {3.664696110073378*^9, 3.664696110431981*^9}, {
   3.664696189032383*^9, 3.664696189633768*^9}, {3.664696241890115*^9, 
   3.6646962766723337`*^9}, {3.664696354821718*^9, 3.664696355443962*^9}, {
   3.664696789992085*^9, 3.6646968043980913`*^9}, {3.664696909223818*^9, 
   3.66469697387847*^9}, {3.664697013655052*^9, 3.664697015488886*^9}, {
   3.664697056414516*^9, 3.664697068188436*^9}, {3.664697098752349*^9, 
   3.6646971063735533`*^9}, {3.664697149375395*^9, 3.664697153619931*^9}, {
   3.6646971984534683`*^9, 3.664697246405456*^9}, {3.664697370942933*^9, 
   3.664697399090749*^9}, {3.6646978389448023`*^9, 3.664697858913142*^9}, {
   3.664697946149563*^9, 3.664697947094035*^9}, {3.664697984455207*^9, 
   3.664698008810586*^9}, {3.6646980529607563`*^9, 3.664698090425251*^9}, {
   3.664698206694282*^9, 3.66469825297878*^9}, {3.6646989386110897`*^9, 
   3.664698965078535*^9}, {3.66469906770883*^9, 3.664699072007962*^9}, {
   3.6646996680813303`*^9, 3.664699669411791*^9}, {3.6647002889879503`*^9, 
   3.6647002893932667`*^9}, {3.664700456266265*^9, 3.664700517031055*^9}, {
   3.66470669026687*^9, 3.66470670328296*^9}, {3.664706777120487*^9, 
   3.664706912171088*^9}, {3.664706945744837*^9, 3.664707017847609*^9}, {
   3.6647070485594463`*^9, 3.664707050943492*^9}, {3.664707104012745*^9, 
   3.664707329494124*^9}, {3.6647074343582363`*^9, 3.664707648592431*^9}, {
   3.664707703644136*^9, 3.664707830174026*^9}, {3.664708141226733*^9, 
   3.664708206934821*^9}, {3.664708587866591*^9, 3.664708796922303*^9}, {
   3.6647089632395144`*^9, 3.664709004774673*^9}, {3.664709120985005*^9, 
   3.6647091711260033`*^9}, {3.6647093408657293`*^9, 
   3.6647093480691843`*^9}, {3.664709398447583*^9, 3.664709399631205*^9}, {
   3.664709440406221*^9, 3.6647096172408447`*^9}, {3.66470968700707*^9, 
   3.6647096874748907`*^9}, {3.664709733056497*^9, 3.6647097965908737`*^9}, {
   3.664709833048622*^9, 3.664709912883317*^9}, {3.664709993671132*^9, 
   3.6647102217856007`*^9}, {3.6647102612570744`*^9, 3.664710355881874*^9}, {
   3.664710458969116*^9, 3.664710476486082*^9}, {3.6647105160988703`*^9, 
   3.664710517453354*^9}, {3.664710566455585*^9, 3.6647106214703503`*^9}, {
   3.664710655269967*^9, 3.6647106874567423`*^9}, {3.664710914411255*^9, 
   3.664710961840914*^9}, {3.6647110709012403`*^9, 3.664711120148699*^9}, {
   3.6647112816515617`*^9, 3.664711324662641*^9}, {3.6647114162790318`*^9, 
   3.664711480503903*^9}, {3.6647115466186447`*^9, 3.664711724699603*^9}, {
   3.664711788134172*^9, 3.6647118012086363`*^9}, 3.664718079878172*^9, {
   3.6647182117815027`*^9, 3.664718285571217*^9}, {3.664718330826974*^9, 
   3.664718341965672*^9}, {3.664718474338214*^9, 3.6647185299534388`*^9}, {
   3.664718615769204*^9, 3.6647186380812387`*^9}, {3.6647186698452673`*^9, 
   3.6647186783427963`*^9}, {3.66473494897462*^9, 3.6647349492295303`*^9}, {
   3.664738485263221*^9, 3.664738487787356*^9}, {3.664794415749584*^9, 
   3.664794416494753*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bHullLocation", "=", "\"\</home/wolf/qea/bhull.stl\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hullLocation", "=", "\"\</home/wolf/qea/hull.stl\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bHullLocation", "=", "\"\</home/wolf/qea/boatfixed.stl\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hullLocation", "=", "\"\</home/wolf/qea/boatfixed.stl\>\""}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Convert", " ", "from", " ", "STL", " ", "file", " ", "units", " ", "to", 
    " ", "cm"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stlUnits", "=", "\"\<Meters\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"stlScale", "=", 
    RowBox[{"QuantityMagnitude", "[", 
     RowBox[{"UnitConvert", "[", 
      RowBox[{"stlUnits", ",", 
       TemplateBox[{
        InterpretationBox["\[InvisibleSpace]", 1],"\"cm\"","centimeters",
         "\"Centimeters\""},
        "Quantity"]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Generate", " ", "point", " ", "cloud"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bouyHullNonScaled", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"bHullLocation", ",", "\"\<BoundaryMeshRegion\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bouyHull", "=", 
    RowBox[{"TransformedRegion", "[", 
     RowBox[{"bouyHullNonScaled", ",", 
      RowBox[{"ScalingTransform", "[", 
       RowBox[{"{", 
        RowBox[{"stlScale", ",", "stlScale", ",", "stlScale"}], "}"}], 
       "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"bouyHull", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\</home/wolf/qea/hulls/cube/cube.stl\>\"", ",", 
       "\"\<BoundaryMeshRegion\>\""}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bouyHullVolume", "=", 
   RowBox[{
    RowBox[{"Volume", "[", "bouyHull", "]"}], 
    TemplateBox[{InterpretationBox["\[InvisibleSpace]", 1],RowBox[{
        SuperscriptBox["\"cm\"", "3"]}],"centimeters cubed",SuperscriptBox[
      "\"Centimeters\"", "3"]},
     "Quantity"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bouyHullPoints", "=", 
    RowBox[{"pointCloud", "[", 
     RowBox[{"bouyHull", ",", "100000"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hullNonScaled", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"hullLocation", ",", "\"\<BoundaryMeshRegion\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hull", "=", 
    RowBox[{"TransformedRegion", "[", 
     RowBox[{"hullNonScaled", ",", 
      RowBox[{"ScalingTransform", "[", 
       RowBox[{"{", 
        RowBox[{"stlScale", ",", "stlScale", ",", "stlScale"}], "}"}], 
       "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"hull", "=", 
     RowBox[{"Import", "[", 
      RowBox[{
      "\"\</home/wolf/qea/hulls/cube/cube.stl\>\"", ",", 
       "\"\<BoundaryMeshRegion\>\""}], "]"}]}], ";"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hullVolume", "=", 
   RowBox[{
    RowBox[{"Volume", "[", "bouyHull", "]"}], 
    TemplateBox[{InterpretationBox["\[InvisibleSpace]", 1],RowBox[{
        SuperscriptBox["\"cm\"", "3"]}],"centimeters cubed",SuperscriptBox[
      "\"Centimeters\"", "3"]},
     "Quantity"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"hullCentroid", "=", 
    RowBox[{"RegionCentroid", "[", "hull", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Constants", " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"GeogravityModelData", "[", 
     RowBox[{
      RowBox[{"CityData", "[", 
       RowBox[{
        TemplateBox[{"\"Needham\"",RowBox[{"Entity", "[", 
            RowBox[{"\"City\"", ",", 
              RowBox[{"{", 
                
                RowBox[{
                 "\"Needham\"", ",", "\"Massachusetts\"", ",", 
                  "\"UnitedStates\""}], "}"}]}], "]"}],
          "\"Entity[\\\"City\\\", {\\\"Needham\\\", \\\"Massachusetts\\\", \\\
\"UnitedStates\\\"}]\"","\"city\""},
         "Entity"], ",", "\"\<Coordinates\>\""}], "]"}], ",", 
      "\"\<Magnitude\>\""}], "]"}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"9.81", 
    TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1],
      RowBox[{"\"m\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        SuperscriptBox["\"s\"", "2"]}],"meters per second squared",
      FractionBox["\"Meters\"", 
       SuperscriptBox["\"Seconds\"", "2"]]},
     "Quantity"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"blueFoamDensity", "=", 
   RowBox[{"0.0317", 
    TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1],
      RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        SuperscriptBox["\"cm\"", "3"]}],"grams per centimeter cubed",
      FractionBox["\"Grams\"", 
       SuperscriptBox["\"Centimeters\"", "3"]]},
     "Quantity"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"waterDensity", "=", 
   RowBox[{"1", 
    TemplateBox[{
     InterpretationBox["\[InvisibleSpace]", 1],
      RowBox[{"\"g\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
        SuperscriptBox["\"cm\"", "3"]}],"grams per centimeter cubed",
      FractionBox["\"Grams\"", 
       SuperscriptBox["\"Centimeters\"", "3"]]},
     "Quantity"]}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6646982846210537`*^9, 3.664698380598084*^9}, {
   3.664698416145689*^9, 3.6646984341927834`*^9}, {3.664698813769145*^9, 
   3.6646988194377623`*^9}, {3.664698876225996*^9, 3.664698894446013*^9}, {
   3.664700001570763*^9, 3.664700034659746*^9}, {3.664700200472093*^9, 
   3.664700209309938*^9}, {3.664703898651926*^9, 3.664703911665319*^9}, {
   3.6647039852881613`*^9, 3.664703988923704*^9}, 3.6647042005337753`*^9, {
   3.664704571773307*^9, 3.664704600472981*^9}, {3.66470485789305*^9, 
   3.66470486604036*^9}, {3.664705002173562*^9, 3.664705061837286*^9}, 
   3.6647050976364813`*^9, {3.6647061106007338`*^9, 3.664706120751904*^9}, {
   3.664709214496207*^9, 3.664709215221624*^9}, {3.664718665061535*^9, 
   3.66471866849293*^9}, {3.664729740293313*^9, 3.6647297447348547`*^9}, {
   3.6647330525550528`*^9, 3.6647330531558723`*^9}, 3.664738478110208*^9, 
   3.664738526520623*^9, {3.664776521751713*^9, 3.664776546583673*^9}, {
   3.664776660472218*^9, 3.6647766878062983`*^9}, {3.664776764356924*^9, 
   3.664776799972835*^9}, {3.664777241447019*^9, 3.6647772432929688`*^9}, {
   3.664789703629382*^9, 3.664789707959347*^9}, {3.664790055229055*^9, 
   3.664790116314494*^9}, {3.664790232692511*^9, 3.6647902425496492`*^9}, {
   3.6647903917529707`*^9, 3.664790432860215*^9}, {3.664793009180902*^9, 
   3.664793019730307*^9}, {3.66479443026509*^9, 3.66479446336277*^9}, {
   3.664794574779377*^9, 3.664794587659688*^9}, {3.66479462301519*^9, 
   3.664794628492531*^9}, {3.664795090775558*^9, 3.664795235018846*^9}, {
   3.66479549931043*^9, 3.664795511043964*^9}, {3.664805598306827*^9, 
   3.664805599148252*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"hull", "\[IndentingNewLine]", 
 RowBox[{"RegionCentroid", "[", "hullNonScaled", "]"}]}], "Input",
 CellChangeTimes->{{3.6647957556632433`*^9, 3.664795767431489*^9}, {
  3.6648048412141733`*^9, 3.664804842537024*^9}}],

Cell[BoxData[
 Graphics3DBox[
  TagBox[
   DynamicModuleBox[{Typeset`mesh = HoldComplete[
     BoundaryMeshRegion[CompressedData["
1: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
P1X4l+oJ7O/6Shh3v7twTcSNwvlcvg79NWenwB5z81vEjcK57sL4/IOZFtpz
UdDBPr2Lxg/tK1zcvm0auVG46BhFh+mVRUN+jOuPfZz2SaMzf1ovp//4jXSM
zwt768xygPWmV6snRNwovNzOor1ueifZkHxeegO+x3onifUL2vPXxd+KuFG4
6BhFh4n2/7z8CvBTY030W/qtU3PDTxXu5kfEuYJuF+02NZWKuFG46BhFh/u9
6EfeUdiDfsX1wevSMey3eqn4AjjtEu6r2t29Fu3PfUXc73FlfkXErcJFxyo6
XB/0y5V6GqWeA7UM5mPGIT9VWgW+IF7D3+9XauM7WFi5YDq5UbjoGEWH+y+X
FNIYhzZXd6I/OH8J8/RryRzez+ZifBq5VbjoWEWH6xFH1zKwczZnT5lGbhX+
SCGN9YxDahnUf2WihHreEK990DtOTk+lppMbhYuOUXRo93A8vCi9YSq5VTj3
p3CdbmrsfPQr2s1bi3H4j7uyCyJuFc79h74O93Pu624V7uwvcO7T4vua0lob
catw7uf0ddifPpNKYb57pnHLaZJPDvf3uXEH890t8StOC9sN78v1W6yrHJ8b
jna7Ptz3Rvs3WZoQcatwriv5OlKuVcplPMevJ/cjMl59Yfos8DeTObT/+kQJ
9boy/tZ0cqtw0bGKDvdLcB/gDwvXoB/mWsVY7//vN/6OiFuFc3+Fr8P9UW6+
hN2yOFgTcatw7j+mPx1vHoV60m4+ttTGOHRlesN0cqtw0bGKzhPh+hD3fbp5
bhq5VfjnYk3U343rqNfO5Db0K+674v7Pk1q7I24VLjpW0eE68uGlNt7X68U4
vrvTUinEc2KlNsr/RnxixK3CuS7s62wL18mcPztK8g3VnWgHN/+ivTrd7lD8
ePw28BNDv4V2ZTL1bfRb+oHFdhY6n6rdGHGrcNGxio6Ua5VypZ5WqSf3U57T
KsIu/mI5AP9zuO+Tdvcl9blpcqtw7o/1dRjf314t4P79mtvx3vl90s+7IehE
3CpcdKyiQ3u9mI7hufar7T+d3Cqc8yz9qg2dlajnHZUK3ivPRbh+lia3Cue8
7Ouw39D+n5n73TRyq3Du95pYaiO/PzEL/YrjlLOjoU97UrhVOPej+jpcZ+J+
w/s786f21S/WhB/xanZBxK3CRccqOkxbinF8d/PTO2b2cmcPwg66p7IF/JVq
4Wm5pt3hvldwZ/8/h/k13H8+vHlpxI3CRccoOkycv44t/Rbc+ZvYx3NlPo/5
/+HM6RE3Cqcd/rUw/v1YZ/6MsNw/hPY85v0puXLEjcJph/s63KfEfQL/FqyJ
uFE4E/f5ryysZ/0fgT0Rnve5rX1ixI3Cmb7aKg7Fq6sP9vGt1QLsnEcy4/p4
vp6Av/ZYZtyM3vY8sFmF/f5YYlbEjcIH5wytJ7n5Gue9XkqOxfeyNdz/wXM2
55XPiLhRuOgYRYeJ+4uWBR18p/SvaDfGS5fjftphtN9uad8WcaNw0TGKTpTC
eb/bnXF6L2ecM1H7NPiTidLv5e9XZ1qYNx7I3DWztx2ujtcwDu3I1iNuFC46
RtFh4v6Nl6sfR7n0H+dF+79vnkluFO6eB/u36HdcUB4GzvN659cTGEd3ZQ+P
uFG46BhFh/brR90u7IfvxCdG3CicifbDx8Z/CH5zPr9JdGjXnBT7bsSNzmEf
8xzJruS2GeRG4ezH/B7Paq3Fe+e+yjsrFfgXBzS3R9woXHSMosN1ow+SOdih
TzQOQrncd0W7bFEwOeJG4Tyn6eswMX5/Vfr+vv7J/b2bq0vAub7J/XSXlIeB
c32T+1/urHwi4kbhXN/0dZgGaxnMU8uCq8C5v5H7+ziPcL+iwvFeuF53TuvC
mWG5GL+4D//ZaiHiRuGiYxQdxs0YL3XPEXGjcKZ6IQ2dOyoX4Ll2hXEErhf9
trpxJrnROca7M+oJjCeHNj8bcaPwZ8JzdPRH1mYuxntnnH15pgX9BenFETcK
Fx2j6Lj6YT3gvHwedvTO6oPg7nuHv7wy0+J+9ogbhYuOUXSYTm8VR6N93SP2
8neSuVHh+0N7OjsW+1Np101LnQvO86f3FNLQ+UXi6xE3Chcdo+gwMS7t/Elw
xiG5j+juzOkRNwovhOuae5JDcfSnOitnhuXie/9Ttg59jufCjcJFxyg6M8L5
e/+BATzXgbXfRNwonInx79WZx1FPrvvTbr82PjHiRud4Ltr/b2SXzSQ3Cud4
Srt9gTOPJHf20p4h+2xoP+N30jHadXuMwnm+z9dx8wXib9wPdUps9ND3niuD
P91o4P0e1jwq4kbhomMUnbG1ofijfw6XyT8vzOTfLzrmr+j453bd9/67GXvh
RuFjw3Vujf+1+/36HJkr79B0hO9NR3sunsv224fnsvfWbv55bSb/XCT7rc85
j/jnLpmUc5qYX3zO/u/rHzx+aN1dKXenVi7nF5+LjqbP9Qj/HCvj7Ro3On9D
40w+Xxl0PtSei+eo/foL155LdLTn4nl5v1yel/c5/RD//O/14XqSxo3CRUfj
7v6mpsOk3a/pMCnnAV+fofBL4jXU3z9XyORzud8onL9ToZT7nlYu10GUc47v
7kX/PU3/rWwddqlyfvO1vXGj83c0zuRzxpn9+jDO7NefcWCfMw7s6zAO7JfL
uK7P+XsW/vlW+o0aNwoXHY1/KVy38zmTdr+mw+Sfa+PvTvic53b8c3NMPpf7
jcL5+xVKue9r5TJeo5zje38v+u9r+hyv/HOIfC6NG4VzfPM5k88ZR/Xrw/P+
fv153t/njKP6OoXQr/bLFW4VznnUP7/p/Ae0j8aNwrnu5nPGB/4fD5N2v6Y/
OKeOuMenapk++1y40TniBq8V4332rXCjcGcPwy/4dSfpc/yOzfXtbJ8+f5dG
4fAXfJ1/z7QwHj6QafXZk8KNwnm+4sp4rS8OL9wonP7C52PNPs52oJ1PfbaD
z+lfKDpo/8/XE333s33oN/W2m1E435evQ3/t5qDjPxfa0+dM1PF5MpXq02fi
+5qff6Iv3ttN5vz3iPikz5kuyef7+1u4DznbKvatv3Afss/5uyKja5m+dQf+
rojPuT5NHXL+3hT7A9eX+XtTPhcdo+hwXekPxTg44/lcV/J5bHwO6xfVTKtv
H5pwq3D+Psq6TnJUL2e8j+tWPesLWDf0uehYRYfxN65b8X7Go50d0fe8wo3C
GX/zde4L47lX5vN95Qo3Cmdi+/ucfiX1mZKldl99FoX7kPg98j0KNwpncnb1
6F5O+4bnn7j/kOukPufvFPDcT6NamExuFc792FwPIqcf+OOg4++HxHzkc+7H
9nVoh9Hv5n42/v6Jz+udJOJKjM/wHJZwq3Duo+C5sWWF9eDOXtq3t92oL9wq
nPsuFB3Yex91u+C1zF2p8Hkxbl9QT4zy2hPjsM+5r8zXWVypQJ/fHcsVbhTO
dEoqNUrj/O6oz/RitdBXH/ce4edyvOp5v/Bbfc7E7+vo0gRw7t92z4d6rk2U
JpFbhX+lnsD93N/Ic2fCrcL5fhe3s+C3Zy4Gp1/aCM8RUl+4VTjfr68TVAs8
99F3nku4VfjWYhzfF+03/o6KcKvwV4txfF+NcL8nOfdHrSqkR/bqc3+Uz0XH
6jroh2e2in330x/nfmM+L/1xn3N9wdfhfiB+pyxXuFE4E/V9fnE56NNncvNn
X334XTBeyvfI78LnTIz3kg8bGEC8nu+Fv58j3Crc+QV9vx/C340RbhXO833s
t+S0K6Jzk6E+7Qqf8/ydr+Pm+/1668PfSxFuFc54KfeH9HKjc9iZLJec8S72
t57nxTzrc67r+TpMHAd8zvO11NmerWO+Jmf7CDcKZ+L3Dv6/nQuDTQ==
      "], {
       Polygon[CompressedData["
1:eJxNnHd4juf7xiOvvWPPiC3ECCJmjNgzsYNQRKyoDCs2CYKg9qxNzdrUrr1X
S1E1as+iapTie52/9/Mev/xxHp8z731e9309x/08Pd67yaNgt/4tv3V3c3PL
lcrNzWFMZtLPLi8mN6UwpTSlwoupyaYxpcWnpUbZdKb0+PTUOMhkwIsZTZlM
manJBFOytoNMcuhhykIuJT4lfamXrKZs+Gysp/mym3Lgc9CTsjl1/fhc1GTH
58TnpCYbn+fGi3lMefG58LmoS0suDz4P15yZXHZ8dvrKQCYfXsxv8jQVoMYT
Ziardb3wXtQUwOfG56YmH58XxIuFTIXxXngv6vKTK4QXi5iKkiuAL0BfHuxR
MbxY3FTC5M2elYBZyGZg7oywGFlPrtEbZmIsPz0UgyVNpejDE+9JXXFyJfGi
j6k0OW+8N32VMZU1lcOLvqbypgqminjRj2wlkz/enxplK5uq4KtQU45MVbxY
zVTdVIOa6rACa5cj4wsDTDXJVcBXoC/1UstUG1+b9TRfHVMgPpCelNVznhyf
nBpl9TylxqempjYZD7xY11SP/UyBT0GdP7m6+Lpccw1ydfB16Ksqmfp4sYGp
oakRNQ1hDbIe7G1dWJ9sCXpqBOsxpowPXmxsauLmvA9K4EtQ14BcY7zY1NSM
XCN8I/oKYI+a48UWpiBTMHsWBGuSrcrc1WBzsg25xmBYnbEG9NActjS1oo+G
+IbUtSDXEi+2NrUhF4wPpq+2pnam9ngxxNTB1NHUCS+Gku1s6oLvQo2y35i6
4rtS055MN7zY3RRm6kFNGOzI2u3JhMBwU09yHfEd6Uu99DL1xvdmPc3Xx9QX
35eelNVz7ov3pUZZPU9+eD9qepMJwIsRpn7sZ3l8eeq6kIvAR3DNPcj1wfeh
r25kvsWL/U2RpihqImEPsgHsbQT8lmwQPUXBfowp0xovRpti3Jz3QRA+iLr+
5KLx4gDTQHJR+Cj6CmePBuHFwaYhplj2bAjsSbYbc3eHg8hGco2xMIyx/vQw
CA41DaOPSHwkdYPJDcWLw00jyMXiY+lrpGmUaTReHGMaa4ozxePFcWTHmybg
J1CjbIJpIn4iNaPJTMKLk02JpinUJMI41h5NZgycappGLg4fR1/q5TvTdPx0
1tN8M0wz8TPpSVk95yH4EGqU1fMUig+lZjqZcLw4yzSb/eyA70DdBHKz8LO4
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
8BHUxVGTHC/qXKWzUyoy8uPoaxh7NB4vTjAlmCayZwlwONnBzD0EjicbzzVO
hLGMxdHDeKhz5wd6Us0HOJG1lVNmAvyb77XKKfMvVF+TTJNNiXhximmqaRpj
U6Er+51pOn46NcrOYGwadM2rzEy8OMs02zSHmtlwGmsnkpkC55rmkZuGn0Zf
Wme+aQF+AetpvoWMzYCurJ7jKHwUNcpGM7YQuuaNYm8XwEWm79nPaHw0ddPJ
LcIv4prnkFuIX0hfM8ksxotLTEtNy6hZCueQHcY+L4KLySbQ0zL4PWPK6B5Y
DHXuKc59kIBPoG4JNUXwos5V+cktwy+jr7ns0XK8uMK00rSKPVsJ55Gdydyz
4HKyS7nGVXA2Y0voYTnUuTMXfSzFL6VuBbmseFHn2tzkVuFX0ddq0w+mNUh+
LX6dab1pA34NP2+kTrkfGV+dZHwDXuObyG82bSG/lZ/1Lp7rXU69i6dx/ax3
PDeRK8r4Jmpc+S2Mb3N35gu5Od9PVX67u/PngqYd7k4VZHwH16i67fgd/Fwo
Sb4w82wj47reH6hbzXW5+vwxyfWqH9f86sfV5+ok+bWM7zTtMv2EF3ejPaa9
+L1JsvtM+/H7qVH2gOkg/iA1P5H5GS8eMh02HaHmMNzDWj+R2Q2PosNkjibJ
qpdjpuP446yn+U6YTuJP0pOyegdN7yXKi8fJ6v1EvZMmL55kPmWakhNPGU+7
O99/VM1pak+wtnKn8Ke45iPUnMCfoK+fyZzBi2dN50znqTkHj5BVD43pQzxD
Vu+Hqqfz9Haa+ZTxISe6ngXd8024l5tQd5aazfjN3Gc/UnMef56+jrJHF/Di
RXSJPbsIXdmfmfsQvED2HNd4CR5m7Cw9XICuZ/xHajbAS6x1gcxFuA5tILMu
SfYX06+my3jxCvrNdBV/NUn2muk6/jo1yv5uuoG/Qc1lMn/gxZumW6bb1NyC
v7HWZTJX4B10i8ydJFn18qfpLv4u62m+e6b7+Pv0pKzeQdN7ifLiXbJ6P1Hv
pMmL95lPmQHkxAfGh+7O9x9V85Dae6yt3AP8A675NjX38Pfo6w8yj/DiY9MT
01NqnsDbZNVDNH2Ij8jq/VD19JTeHjKfMq3Jtea517OtZzyG5zyGusfUHMOL
+u/KQWqe4p/S1x326BlefI5esGfPoSv7B3PfhM/IPuEaX8BbjD2mh2dQ/93d
Sx9P8E+oe05uF17cifaS2Zkk+5fppekVXnyN/ja9wb9Jkv3H9Bb/lhpl35ne
499T84rMB7z4r+mj6RM1H+HfrPWKzGv4H/pI5r8kWfXy2fQF/4X1NN9Xk/4x
j3fwPVm9j7jczenFL2T1fqLeTZQXVfOFzCJyYjL73N3hfP9RNfIrqHtLD8q8
hR+4VuW+4r/S4wcyDnJiclMKU0rWSQE/kVUPC+hDdJDV+6HqKSW9uTOvMsPJ
Dee517OtZ3whz/lC6pJTo0xyqP+u3KBGmRtQff3HHqXCi6lRGodzz1JDV/YD
c/8LU5FNwTWmgR+ZT5lreFH/3b1KT6q5CtOwrnK/sq74C7rK3L+4/39WZyqd
c9Li0zmc5xp9pu/T6R1OLyqj8QwO53fpdHAq9cpkJCdmMmU2eVCTGaZjrbRk
5DPzudbU9+Ys+CzMq7qsDud35gxwnitryuZwejEL2ewOfmcEVzKfMjnIiTlN
uZShJhfMytpZyKSHGbmmXGQ8YAbGlMmDF/Oa8pnyU5MPepBVD554T2qULUBP
+WEuxpTxwosFkRc1BWF+1s7DZ3lhIVSQTCGYj73QnhTGF2HfMnE9efF5yRSh
zgPvQb4wmUJ4sSgqRE1RWIS1CvOZfFE+197q93DF8MXYP+1PcYfzd3DZYW6y
+j1QCYfTi8XIejucvwMqDnMwnzIlyYmlTD6m0tT4wOKsXYxMNpiD/fEhkxuq
L/Xyf78TwpdhPc1X1uH8HZA3LExWvy8q5+D3WA5njbK+DufvjsrCcsynTHly
YgVTRZMfNRVhWdYuQ6YELMm1ViRTGnozpkwlvOhvqmyqQk1lWJqseqiKr0qN
stXoqQqsyJgy1fFiDVSdmhqwCmtX4jN/GIBqkAmAldkb7VFNvKjnR89HLfas
AMxNtiRzl4I1yVbmGmtBH8b8WbMmrI0CqKkNa7F2TT7zhF6oNhkvqL50L+jv
UOvg67Df2s9Ah/NvUH3hbLL6O8i6DqcX65Ct53D+DWQgnMF8ytQnJzYwNTQ1
oqYhDGTtOmTKwfLsZ0MyflB9qRf9HWRjfGPW03xNHM6/gawHl5DV30s2dTi9
2JhsM4fzbyebwA3Mp0xzcmILU5ApmJog2IS1G5OpC+tzrUFkGsF6jCnTEi+2
MrU2taGmNWxEVj20xbelRtl29NQGBjGmTHu8GILaUxMC27B2Sz5rBTugEDId
YGv2RnvUES/qedPz1Ik9qwb9yNZn7gawI9nWXGMn2JCxVqzZEYaiDtSEwk6s
3ZHPqsLqKJRMdai+dC/oPczO+M7st/azi8P5DmYz6EFW7wF+43B6sTPZrg7n
O4BdYEbmU6YbObG7KczUg5ow2IW1O5NpCpuzn2FkgqH6Ui96DzAcH856mq+n
w/kOYFeYl6zeF+zlcHoxnGxvh/PdwZ6wBPMp04ec2NcUYepHTQTsydrhZL6B
3bjWCDI9YFfGlPkWL/Y3RZqiqImEPciqh2h8NDXKxtBTFIxgTJkBeHEgGkDN
QBjF2t/yWX84CA0kMwhGsjfao8F4Uc+bnqch7Fk7GEy2G3N3h4PJRnKNQ2AY
Y/1ZczCMRYOoiYVDWHswn7WF7VEsmfZQfeleGKP/X4Efyn5rP4c5nP8GUW84
jqz+HZzhDqcXh5Id4XD+GzjD4FjmU2YkOXGUabTqqRkNh7H2UDK9YB/2czSZ
flB9qRf9Ozhj8WNZT/PFOZz/Bs4IOI3sSs6mS+BYsjqP6lwaB5cy32fOvvJi
vHGcw3nedcO7MYfWVi4eH881jyEXh4+jx5FkxuPFCaYE00RqEuAYsurhJX2I
48nq/weop4n0No75lPmLnDjJ4ZT8G35+Q90EaibhxcloEutMhgnsjfYoES/q
edPzNIU9i4H9yI5k7lEwkWwC1zgFjmZsAmsmwqloMjVT4RTWTuSzaDgATSUz
AKqv/wGt0AEw
        "]]}, 
      Method -> {
       "EliminateUnusedCoordinates" -> True, "DeleteDuplicateCoordinates" -> 
        Automatic, "VertexAlias" -> Identity, "CheckOrientation" -> Automatic,
         "CoplanarityTolerance" -> Automatic, "CheckIntersections" -> 
        Automatic, "BoundaryNesting" -> {{0, 0}}, "SeparateBoundaries" -> 
        False, "PropagateMarkers" -> True, "ZeroTest" -> Automatic, "Hash" -> 
        2514586185611610331}]]}, 
    TagBox[GraphicsComplex3DBox[CompressedData["
1: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
P1X4l+oJ7O/6Shh3v7twTcSNwvlcvg79NWenwB5z81vEjcK57sL4/IOZFtpz
UdDBPr2Lxg/tK1zcvm0auVG46BhFh+mVRUN+jOuPfZz2SaMzf1ovp//4jXSM
zwt768xygPWmV6snRNwovNzOor1ueifZkHxeegO+x3onifUL2vPXxd+KuFG4
6BhFh4n2/7z8CvBTY030W/qtU3PDTxXu5kfEuYJuF+02NZWKuFG46BhFh/u9
6EfeUdiDfsX1wevSMey3eqn4AjjtEu6r2t29Fu3PfUXc73FlfkXErcJFxyo6
XB/0y5V6GqWeA7UM5mPGIT9VWgW+IF7D3+9XauM7WFi5YDq5UbjoGEWH+y+X
FNIYhzZXd6I/OH8J8/RryRzez+ZifBq5VbjoWEWH6xFH1zKwczZnT5lGbhX+
SCGN9YxDahnUf2WihHreEK990DtOTk+lppMbhYuOUXRo93A8vCi9YSq5VTj3
p3CdbmrsfPQr2s1bi3H4j7uyCyJuFc79h74O93Pu624V7uwvcO7T4vua0lob
catw7uf0ddifPpNKYb57pnHLaZJPDvf3uXEH890t8StOC9sN78v1W6yrHJ8b
jna7Ptz3Rvs3WZoQcatwriv5OlKuVcplPMevJ/cjMl59Yfos8DeTObT/+kQJ
9boy/tZ0cqtw0bGKDvdLcB/gDwvXoB/mWsVY7//vN/6OiFuFc3+Fr8P9UW6+
hN2yOFgTcatw7j+mPx1vHoV60m4+ttTGOHRlesN0cqtw0bGKzhPh+hD3fbp5
bhq5VfjnYk3U343rqNfO5Db0K+674v7Pk1q7I24VLjpW0eE68uGlNt7X68U4
vrvTUinEc2KlNsr/RnxixK3CuS7s62wL18mcPztK8g3VnWgHN/+ivTrd7lD8
ePw28BNDv4V2ZTL1bfRb+oHFdhY6n6rdGHGrcNGxio6Ua5VypZ5WqSf3U57T
KsIu/mI5AP9zuO+Tdvcl9blpcqtw7o/1dRjf314t4P79mtvx3vl90s+7IehE
3CpcdKyiQ3u9mI7hufar7T+d3Cqc8yz9qg2dlajnHZUK3ivPRbh+lia3Cue8
7Ouw39D+n5n73TRyq3Du95pYaiO/PzEL/YrjlLOjoU97UrhVOPej+jpcZ+J+
w/s786f21S/WhB/xanZBxK3CRccqOkxbinF8d/PTO2b2cmcPwg66p7IF/JVq
4Wm5pt3hvldwZ/8/h/k13H8+vHlpxI3CRccoOkycv44t/Rbc+ZvYx3NlPo/5
/+HM6RE3Cqcd/rUw/v1YZ/6MsNw/hPY85v0puXLEjcJph/s63KfEfQL/FqyJ
uFE4E/f5ryysZ/0fgT0Rnve5rX1ixI3Cmb7aKg7Fq6sP9vGt1QLsnEcy4/p4
vp6Av/ZYZtyM3vY8sFmF/f5YYlbEjcIH5wytJ7n5Gue9XkqOxfeyNdz/wXM2
55XPiLhRuOgYRYeJ+4uWBR18p/SvaDfGS5fjftphtN9uad8WcaNw0TGKTpTC
eb/bnXF6L2ecM1H7NPiTidLv5e9XZ1qYNx7I3DWztx2ujtcwDu3I1iNuFC46
RtFh4v6Nl6sfR7n0H+dF+79vnkluFO6eB/u36HdcUB4GzvN659cTGEd3ZQ+P
uFG46BhFh/brR90u7IfvxCdG3CicifbDx8Z/CH5zPr9JdGjXnBT7bsSNzmEf
8xzJruS2GeRG4ezH/B7Paq3Fe+e+yjsrFfgXBzS3R9woXHSMosN1ow+SOdih
TzQOQrncd0W7bFEwOeJG4Tyn6eswMX5/Vfr+vv7J/b2bq0vAub7J/XSXlIeB
c32T+1/urHwi4kbhXN/0dZgGaxnMU8uCq8C5v5H7+ziPcL+iwvFeuF53TuvC
mWG5GL+4D//ZaiHiRuGiYxQdxs0YL3XPEXGjcKZ6IQ2dOyoX4Ll2hXEErhf9
trpxJrnROca7M+oJjCeHNj8bcaPwZ8JzdPRH1mYuxntnnH15pgX9BenFETcK
Fx2j6Lj6YT3gvHwedvTO6oPg7nuHv7wy0+J+9ogbhYuOUXSYTm8VR6N93SP2
8neSuVHh+0N7OjsW+1Np101LnQvO86f3FNLQ+UXi6xE3Chcdo+gwMS7t/Elw
xiG5j+juzOkRNwovhOuae5JDcfSnOitnhuXie/9Ttg59jufCjcJFxyg6M8L5
e/+BATzXgbXfRNwonInx79WZx1FPrvvTbr82PjHiRud4Ltr/b2SXzSQ3Cud4
Srt9gTOPJHf20p4h+2xoP+N30jHadXuMwnm+z9dx8wXib9wPdUps9ND3niuD
P91o4P0e1jwq4kbhomMUnbG1ofijfw6XyT8vzOTfLzrmr+j453bd9/67GXvh
RuFjw3Vujf+1+/36HJkr79B0hO9NR3sunsv224fnsvfWbv55bSb/XCT7rc85
j/jnLpmUc5qYX3zO/u/rHzx+aN1dKXenVi7nF5+LjqbP9Qj/HCvj7Ro3On9D
40w+Xxl0PtSei+eo/foL155LdLTn4nl5v1yel/c5/RD//O/14XqSxo3CRUfj
7v6mpsOk3a/pMCnnAV+fofBL4jXU3z9XyORzud8onL9ToZT7nlYu10GUc47v
7kX/PU3/rWwddqlyfvO1vXGj83c0zuRzxpn9+jDO7NefcWCfMw7s6zAO7JfL
uK7P+XsW/vlW+o0aNwoXHY1/KVy38zmTdr+mw+Sfa+PvTvic53b8c3NMPpf7
jcL5+xVKue9r5TJeo5zje38v+u9r+hyv/HOIfC6NG4VzfPM5k88ZR/Xrw/P+
fv153t/njKP6OoXQr/bLFW4VznnUP7/p/Ae0j8aNwrnu5nPGB/4fD5N2v6Y/
OKeOuMenapk++1y40TniBq8V4332rXCjcGcPwy/4dSfpc/yOzfXtbJ8+f5dG
4fAXfJ1/z7QwHj6QafXZk8KNwnm+4sp4rS8OL9wonP7C52PNPs52oJ1PfbaD
z+lfKDpo/8/XE333s33oN/W2m1E435evQ3/t5qDjPxfa0+dM1PF5MpXq02fi
+5qff6Iv3ttN5vz3iPikz5kuyef7+1u4DznbKvatv3Afss/5uyKja5m+dQf+
rojPuT5NHXL+3hT7A9eX+XtTPhcdo+hwXekPxTg44/lcV/J5bHwO6xfVTKtv
H5pwq3D+Psq6TnJUL2e8j+tWPesLWDf0uehYRYfxN65b8X7Go50d0fe8wo3C
GX/zde4L47lX5vN95Qo3Cmdi+/ucfiX1mZKldl99FoX7kPg98j0KNwpncnb1
6F5O+4bnn7j/kOukPufvFPDcT6NamExuFc792FwPIqcf+OOg4++HxHzkc+7H
9nVoh9Hv5n42/v6Jz+udJOJKjM/wHJZwq3Duo+C5sWWF9eDOXtq3t92oL9wq
nPsuFB3Yex91u+C1zF2p8Hkxbl9QT4zy2hPjsM+5r8zXWVypQJ/fHcsVbhTO
dEoqNUrj/O6oz/RitdBXH/ce4edyvOp5v/Bbfc7E7+vo0gRw7t92z4d6rk2U
JpFbhX+lnsD93N/Ic2fCrcL5fhe3s+C3Zy4Gp1/aCM8RUl+4VTjfr68TVAs8
99F3nku4VfjWYhzfF+03/o6KcKvwV4txfF+NcL8nOfdHrSqkR/bqc3+Uz0XH
6jroh2e2in330x/nfmM+L/1xn3N9wdfhfiB+pyxXuFE4E/V9fnE56NNncvNn
X334XTBeyvfI78LnTIz3kg8bGEC8nu+Fv58j3Crc+QV9vx/C340RbhXO833s
t+S0K6Jzk6E+7Qqf8/ydr+Pm+/1668PfSxFuFc54KfeH9HKjc9iZLJec8S72
t57nxTzrc67r+TpMHAd8zvO11NmerWO+Jmf7CDcKZ+L3Dv6/nQuDTQ==
      "], 
      {Hue[0.6, 0.3, 0.85], EdgeForm[Hue[0.6, 0.3, 0.75]], 
       Polygon3DBox[CompressedData["
1:eJxNnHd4juf7xiOvvWPPiC3ECCJmjNgzsYNQRKyoDCs2CYKg9qxNzdrUrr1X
S1E1as+iapTie52/9/Mev/xxHp8z731e9309x/08Pd67yaNgt/4tv3V3c3PL
lcrNzWFMZtLPLi8mN6UwpTSlwoupyaYxpcWnpUbZdKb0+PTUOMhkwIsZTZlM
manJBFOytoNMcuhhykIuJT4lfamXrKZs+Gysp/mym3Lgc9CTsjl1/fhc1GTH
58TnpCYbn+fGi3lMefG58LmoS0suDz4P15yZXHZ8dvrKQCYfXsxv8jQVoMYT
Ziardb3wXtQUwOfG56YmH58XxIuFTIXxXngv6vKTK4QXi5iKkiuAL0BfHuxR
MbxY3FTC5M2elYBZyGZg7oywGFlPrtEbZmIsPz0UgyVNpejDE+9JXXFyJfGi
j6k0OW+8N32VMZU1lcOLvqbypgqminjRj2wlkz/enxplK5uq4KtQU45MVbxY
zVTdVIOa6rACa5cj4wsDTDXJVcBXoC/1UstUG1+b9TRfHVMgPpCelNVznhyf
nBpl9TylxqempjYZD7xY11SP/UyBT0GdP7m6+Lpccw1ydfB16Ksqmfp4sYGp
oakRNQ1hDbIe7G1dWJ9sCXpqBOsxpowPXmxsauLmvA9K4EtQ14BcY7zY1NSM
XCN8I/oKYI+a48UWpiBTMHsWBGuSrcrc1WBzsg25xmBYnbEG9NActjS1oo+G
+IbUtSDXEi+2NrUhF4wPpq+2pnam9ngxxNTB1NHUCS+Gku1s6oLvQo2y35i6
4rtS055MN7zY3RRm6kFNGOzI2u3JhMBwU09yHfEd6Uu99DL1xvdmPc3Xx9QX
35eelNVz7ov3pUZZPU9+eD9qepMJwIsRpn7sZ3l8eeq6kIvAR3DNPcj1wfeh
r25kvsWL/U2RpihqImEPsgHsbQT8lmwQPUXBfowp0xovRpti3Jz3QRA+iLr+
5KLx4gDTQHJR+Cj6CmePBuHFwaYhplj2bAjsSbYbc3eHg8hGco2xMIyx/vQw
CA41DaOPSHwkdYPJDcWLw00jyMXiY+lrpGmUaTReHGMaa4ozxePFcWTHmybg
J1CjbIJpIn4iNaPJTMKLk02JpinUJMI41h5NZgycappGLg4fR1/q5TvTdPx0
1tN8M0wz8TPpSVk95yH4EGqU1fMUig+lZjqZcLw4yzSb/eyA70DdBHKz8LO4
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
8BHUxVGTHC/qXKWzUyoy8uPoaxh7NB4vTjAlmCayZwlwONnBzD0EjicbzzVO
hLGMxdHDeKhz5wd6Us0HOJG1lVNmAvyb77XKKfMvVF+TTJNNiXhximmqaRpj
U6Er+51pOn46NcrOYGwadM2rzEy8OMs02zSHmtlwGmsnkpkC55rmkZuGn0Zf
Wme+aQF+AetpvoWMzYCurJ7jKHwUNcpGM7YQuuaNYm8XwEWm79nPaHw0ddPJ
LcIv4prnkFuIX0hfM8ksxotLTEtNy6hZCueQHcY+L4KLySbQ0zL4PWPK6B5Y
DHXuKc59kIBPoG4JNUXwos5V+cktwy+jr7ns0XK8uMK00rSKPVsJ55Gdydyz
4HKyS7nGVXA2Y0voYTnUuTMXfSzFL6VuBbmseFHn2tzkVuFX0ddq0w+mNUh+
LX6dab1pA34NP2+kTrkfGV+dZHwDXuObyG82bSG/lZ/1Lp7rXU69i6dx/ax3
PDeRK8r4Jmpc+S2Mb3N35gu5Od9PVX67u/PngqYd7k4VZHwH16i67fgd/Fwo
Sb4w82wj47reH6hbzXW5+vwxyfWqH9f86sfV5+ok+bWM7zTtMv2EF3ejPaa9
+L1JsvtM+/H7qVH2gOkg/iA1P5H5GS8eMh02HaHmMNzDWj+R2Q2PosNkjibJ
qpdjpuP446yn+U6YTuJP0pOyegdN7yXKi8fJ6v1EvZMmL55kPmWakhNPGU+7
O99/VM1pak+wtnKn8Ke45iPUnMCfoK+fyZzBi2dN50znqTkHj5BVD43pQzxD
Vu+Hqqfz9Haa+ZTxISe6ngXd8024l5tQd5aazfjN3Gc/UnMef56+jrJHF/Di
RXSJPbsIXdmfmfsQvED2HNd4CR5m7Cw9XICuZ/xHajbAS6x1gcxFuA5tILMu
SfYX06+my3jxCvrNdBV/NUn2muk6/jo1yv5uuoG/Qc1lMn/gxZumW6bb1NyC
v7HWZTJX4B10i8ydJFn18qfpLv4u62m+e6b7+Pv0pKzeQdN7ifLiXbJ6P1Hv
pMmL95lPmQHkxAfGh+7O9x9V85Dae6yt3AP8A675NjX38Pfo6w8yj/DiY9MT
01NqnsDbZNVDNH2Ij8jq/VD19JTeHjKfMq3Jtea517OtZzyG5zyGusfUHMOL
+u/KQWqe4p/S1x326BlefI5esGfPoSv7B3PfhM/IPuEaX8BbjD2mh2dQ/93d
Sx9P8E+oe05uF17cifaS2Zkk+5fppekVXnyN/ja9wb9Jkv3H9Bb/lhpl35ne
499T84rMB7z4r+mj6RM1H+HfrPWKzGv4H/pI5r8kWfXy2fQF/4X1NN9Xk/4x
j3fwPVm9j7jczenFL2T1fqLeTZQXVfOFzCJyYjL73N3hfP9RNfIrqHtLD8q8
hR+4VuW+4r/S4wcyDnJiclMKU0rWSQE/kVUPC+hDdJDV+6HqKSW9uTOvMsPJ
Dee517OtZ3whz/lC6pJTo0xyqP+u3KBGmRtQff3HHqXCi6lRGodzz1JDV/YD
c/8LU5FNwTWmgR+ZT5lreFH/3b1KT6q5CtOwrnK/sq74C7rK3L+4/39WZyqd
c9Li0zmc5xp9pu/T6R1OLyqj8QwO53fpdHAq9cpkJCdmMmU2eVCTGaZjrbRk
5DPzudbU9+Ys+CzMq7qsDud35gxwnitryuZwejEL2ewOfmcEVzKfMjnIiTlN
uZShJhfMytpZyKSHGbmmXGQ8YAbGlMmDF/Oa8pnyU5MPepBVD554T2qULUBP
+WEuxpTxwosFkRc1BWF+1s7DZ3lhIVSQTCGYj73QnhTGF2HfMnE9efF5yRSh
zgPvQb4wmUJ4sSgqRE1RWIS1CvOZfFE+197q93DF8MXYP+1PcYfzd3DZYW6y
+j1QCYfTi8XIejucvwMqDnMwnzIlyYmlTD6m0tT4wOKsXYxMNpiD/fEhkxuq
L/Xyf78TwpdhPc1X1uH8HZA3LExWvy8q5+D3WA5njbK+DufvjsrCcsynTHly
YgVTRZMfNRVhWdYuQ6YELMm1ViRTGnozpkwlvOhvqmyqQk1lWJqseqiKr0qN
stXoqQqsyJgy1fFiDVSdmhqwCmtX4jN/GIBqkAmAldkb7VFNvKjnR89HLfas
AMxNtiRzl4I1yVbmGmtBH8b8WbMmrI0CqKkNa7F2TT7zhF6oNhkvqL50L+jv
UOvg67Df2s9Ah/NvUH3hbLL6O8i6DqcX65Ct53D+DWQgnMF8ytQnJzYwNTQ1
oqYhDGTtOmTKwfLsZ0MyflB9qRf9HWRjfGPW03xNHM6/gawHl5DV30s2dTi9
2JhsM4fzbyebwA3Mp0xzcmILU5ApmJog2IS1G5OpC+tzrUFkGsF6jCnTEi+2
MrU2taGmNWxEVj20xbelRtl29NQGBjGmTHu8GILaUxMC27B2Sz5rBTugEDId
YGv2RnvUES/qedPz1Ik9qwb9yNZn7gawI9nWXGMn2JCxVqzZEYaiDtSEwk6s
3ZHPqsLqKJRMdai+dC/oPczO+M7st/azi8P5DmYz6EFW7wF+43B6sTPZrg7n
O4BdYEbmU6YbObG7KczUg5ow2IW1O5NpCpuzn2FkgqH6Ui96DzAcH856mq+n
w/kOYFeYl6zeF+zlcHoxnGxvh/PdwZ6wBPMp04ec2NcUYepHTQTsydrhZL6B
3bjWCDI9YFfGlPkWL/Y3RZqiqImEPciqh2h8NDXKxtBTFIxgTJkBeHEgGkDN
QBjF2t/yWX84CA0kMwhGsjfao8F4Uc+bnqch7Fk7GEy2G3N3h4PJRnKNQ2AY
Y/1ZczCMRYOoiYVDWHswn7WF7VEsmfZQfeleGKP/X4Efyn5rP4c5nP8GUW84
jqz+HZzhDqcXh5Id4XD+GzjD4FjmU2YkOXGUabTqqRkNh7H2UDK9YB/2czSZ
flB9qRf9Ozhj8WNZT/PFOZz/Bs4IOI3sSs6mS+BYsjqP6lwaB5cy32fOvvJi
vHGcw3nedcO7MYfWVi4eH881jyEXh4+jx5FkxuPFCaYE00RqEuAYsurhJX2I
48nq/weop4n0No75lPmLnDjJ4ZT8G35+Q90EaibhxcloEutMhgnsjfYoES/q
edPzNIU9i4H9yI5k7lEwkWwC1zgFjmZsAmsmwqloMjVT4RTWTuSzaDgATSUz
AKqv/wGt0AEw
        "]]}],
     MouseAppearanceTag["LinkHand"]],
    AllowKernelInitialization->False],
   "MeshGraphics",
   AutoDelete->True,
   Editable->False,
   Selectable->False],
  Boxed->False,
  DefaultBaseStyle->{
   "Graphics3D", FrontEnd`GraphicsHighlightColor -> Hue[0.1, 1, 0.7]},
  ImageSize->{145.6638200153703, 432.},
  Lighting->{{"Ambient", 
     GrayLevel[0.45]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{2, 0, 2}]}, {"Directional", 
     GrayLevel[0.33], 
     ImageScaled[{2, 2, 2}]}, {"Directional", 
     GrayLevel[0.3], 
     ImageScaled[{0, 2, 2}]}},
  Method->{"ShrinkWrap" -> True},
  ViewPoint->{0.20929369675954806`, 1.7423879923372854`, 2.893143659180368},
  ViewVertical->{-1.0900336510260613`, 5.755101315117227, 
   0.15373500943824392`}]], "Output",
 CellChangeTimes->{{3.664795745570682*^9, 3.664795767876338*^9}, 
   3.664804842986611*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "9.560117966995044`*^-6"}], ",", "0.03264502375863025`", ",", 
   "0.16678029940074912`"}], "}"}]], "Output",
 CellChangeTimes->{{3.664795745570682*^9, 3.664795767876338*^9}, 
   3.664804843040695*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"can1Loc", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"can2Loc", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"frontVec", "=", 
   RowBox[{"Normalize", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boat", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"name", "\[Rule]", "\"\<BouyHull\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"type", "\[Rule]", "\"\<Bouy\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"mass", "\[Rule]", 
        RowBox[{"bouyHullVolume", "*", "waterDensity"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"volume", "\[Rule]", "bouyHullVolume"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"points", "\[Rule]", "bouyHullPoints"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"front", "\[Rule]", "frontVec"}], ",", "\[IndentingNewLine]", 
       RowBox[{"render", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"GraphicsComplex", "[", 
          RowBox[{
           RowBox[{"MeshCoordinates", "@", "bouyHull"}], ",", 
           RowBox[{"MeshCells", "[", 
            RowBox[{"bouyHull", ",", "2"}], "]"}]}], "]"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"cobRender", "\[Rule]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"White", ",", 
            RowBox[{"PointSize", "[", "Large", "]"}], ",", 
            RowBox[{"Point", "[", "#", "]"}]}], "}"}], "&"}], ")"}]}]}], 
      "\[IndentingNewLine]", "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"name", "\[Rule]", "\"\<Hull\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"type", "\[Rule]", "\"\<PointMass\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"mass", "\[Rule]", 
        RowBox[{"hullVolume", "*", "blueFoamDensity"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"volume", "\[Rule]", "hullVolume"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"com", "\[Rule]", 
        RowBox[{"Quantity", "[", 
         RowBox[{"hullCentroid", ",", "\"\<Centimeters\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"render", "\[Rule]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Black", ",", 
            RowBox[{"PointSize", "[", "Large", "]"}], ",", 
            RowBox[{"Point", "[", "hullCentroid", "]"}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeForm", "[", "]"}], ",", 
            RowBox[{"Opacity", "[", ".6", "]"}], ",", "LightPink", ",", 
            RowBox[{"GraphicsComplex", "[", 
             RowBox[{
              RowBox[{"MeshCoordinates", "@", "hull"}], ",", 
              RowBox[{"MeshCells", "[", 
               RowBox[{"hull", ",", "2"}], "]"}]}], "]"}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "|>"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"name", "\[Rule]", "\"\<Can\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"type", "\[Rule]", "\"\<PointMass\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"mass", "\[Rule]", 
        RowBox[{"389.5", 
         TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1],"\"g\"","grams",
           "\"Grams\""},
          "Quantity"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"volume", "\[Rule]", 
        TemplateBox[{
         InterpretationBox["\[InvisibleSpace]", 1],
          "\"volumes of a US soda can\"","volumes of a US soda can",
          "\"USSodaCanVolumes\""},
         "Quantity"]}], ",", "\[IndentingNewLine]", 
       RowBox[{"com", "\[Rule]", 
        RowBox[{"Quantity", "[", 
         RowBox[{"can1Loc", ",", "\"\<Centimeters\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"render", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Brown", ",", 
          RowBox[{"PointSize", "[", "Large", "]"}], ",", 
          RowBox[{"Point", "[", "can1Loc", "]"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "|>"}], ",", "\[IndentingNewLine]", 
     RowBox[{"<|", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"name", "\[Rule]", "\"\<Can\>\""}], ",", "\[IndentingNewLine]", 
       RowBox[{"type", "\[Rule]", "\"\<PointMass\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"mass", "\[Rule]", 
        RowBox[{"389.5", 
         TemplateBox[{
          InterpretationBox["\[InvisibleSpace]", 1],"\"g\"","grams",
           "\"Grams\""},
          "Quantity"]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"volume", "\[Rule]", 
        TemplateBox[{
         InterpretationBox["\[InvisibleSpace]", 1],
          "\"volumes of a US soda can\"","volumes of a US soda can",
          "\"USSodaCanVolumes\""},
         "Quantity"]}], ",", "\[IndentingNewLine]", 
       RowBox[{"com", "\[Rule]", 
        RowBox[{"Quantity", "[", 
         RowBox[{"can2Loc", ",", "\"\<Centimeters\>\""}], "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"render", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"LightBrown", ",", 
          RowBox[{"PointSize", "[", "Large", "]"}], ",", 
          RowBox[{"Point", "[", "can2Loc", "]"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "|>"}]}], "\[IndentingNewLine]", "}"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6647039915829687`*^9, 3.664704035502009*^9}, {
   3.664704095294242*^9, 3.6647041643757*^9}, {3.6647042160790167`*^9, 
   3.664704348885541*^9}, {3.664704391237822*^9, 3.664704554346246*^9}, {
   3.664704612135396*^9, 3.664704749629684*^9}, {3.664704784044147*^9, 
   3.664704792309802*^9}, {3.664704832593478*^9, 3.664704847730689*^9}, {
   3.6647049049137907`*^9, 3.664704929653914*^9}, {3.66470496455412*^9, 
   3.664704974144504*^9}, {3.6647050877264347`*^9, 3.664705088634473*^9}, {
   3.664705161257494*^9, 3.664705193492774*^9}, 3.664705350690613*^9, {
   3.6647061672350597`*^9, 3.664706167610734*^9}, {3.66470622748759*^9, 
   3.6647062277627*^9}, 3.664706488848639*^9, {3.664709052778764*^9, 
   3.664709059045382*^9}, {3.664709256437834*^9, 3.664709277238265*^9}, {
   3.664709700510323*^9, 3.66470970072978*^9}, 3.6647180011471577`*^9, {
   3.664720318912198*^9, 3.6647203199911823`*^9}, {3.664729750582429*^9, 
   3.66472977242938*^9}, {3.6647304722663116`*^9, 3.664730499332045*^9}, 
   3.66477683732477*^9, {3.6647768870424747`*^9, 3.664776888491158*^9}, {
   3.664782539141367*^9, 3.664782623960918*^9}, {3.664783022274016*^9, 
   3.664783079056712*^9}, {3.66478422589983*^9, 3.664784233992846*^9}, {
   3.6647855198402567`*^9, 3.664785551895589*^9}, {3.664786063519346*^9, 
   3.664786065106255*^9}, {3.664790593370414*^9, 3.664790630099442*^9}, {
   3.664790660129119*^9, 3.664790681603759*^9}, {3.66479119434578*^9, 
   3.6647911992147408`*^9}, {3.6647924307293177`*^9, 3.66479243593312*^9}, {
   3.6647925417248793`*^9, 3.664792547567238*^9}, {3.6647933532526484`*^9, 
   3.664793371245741*^9}, {3.664795250614648*^9, 3.664795252710494*^9}, {
   3.6647960391763678`*^9, 3.664796067048753*^9}, {3.664796120727929*^9, 
   3.664796122786933*^9}, {3.6647962231513968`*^9, 3.664796301416601*^9}, 
   3.664796381999275*^9, {3.664796422201746*^9, 3.664796462529286*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"UnitConvert", "[", 
   RowBox[{"hullVolume", ",", 
    TemplateBox[{InterpretationBox["\[InvisibleSpace]", 1],RowBox[{
        SuperscriptBox["\"cm\"", "3"]}],"centimeters cubed",SuperscriptBox[
      "\"Centimeters\"", "3"]},
     "Quantity"]}], "]"}], "^", 
  RowBox[{"(", 
   RowBox[{"1", "/", "3"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.664790360303729*^9, 3.664790361937812*^9}, {
  3.66479070315705*^9, 3.664790715413746*^9}, {3.6647926327869177`*^9, 
  3.664792635742467*^9}}],

Cell[BoxData[
 TemplateBox[{"10.53169049231523`","\"cm\"","centimeters","\"Centimeters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.664790362359313*^9, 3.664790453492757*^9, 
  3.6647907158356133`*^9, 3.664792636223537*^9, 3.664795550403998*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"calculateWaterLine", "[", 
  RowBox[{"boat", ",", 
   RowBox[{"Normalize", "[", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1", ",", "1"}], "}"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.66479031958531*^9, 3.6647903357106524`*^9}}],

Cell[BoxData["0.04247677897268299`"], "Output",
 CellChangeTimes->{3.6647903365943003`*^9, 3.6647904572803307`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"wNormal", "=", 
        RowBox[{"Normalize", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]", "]"}], ",", 
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0"}], "}"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"renderBoatWithForces", "[", 
        RowBox[{"boat", ",", "wNormal"}], "]"}]}], ")"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.66477608423473*^9, 3.6647760947334137`*^9}, {
   3.664776196976048*^9, 3.664776217095848*^9}, {3.6647808901628428`*^9, 
   3.664780956967023*^9}, {3.664781020820505*^9, 3.6647810723504066`*^9}, {
   3.664782384587139*^9, 3.664782435655072*^9}, {3.6647824974929323`*^9, 
   3.664782497835053*^9}, {3.664783680920497*^9, 3.6647836845623293`*^9}, {
   3.6647837511077642`*^9, 3.664783757296987*^9}, {3.664783814837596*^9, 
   3.6647838229150333`*^9}, 3.664783858667955*^9, {3.664785323327217*^9, 
   3.6647854159923277`*^9}, {3.664785790551841*^9, 3.664785795888829*^9}, {
   3.664785980964679*^9, 3.664786003576042*^9}, {3.664786101091261*^9, 
   3.6647861029624233`*^9}, {3.664786688180564*^9, 3.664786688529848*^9}, {
   3.664788715050747*^9, 3.664788715666157*^9}, 3.6647892500224657`*^9, {
   3.664789508808461*^9, 3.664789585701277*^9}, {3.664790530621863*^9, 
   3.664790572816312*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{BoatContext`\[Theta]$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[BoatContext`\[Theta]$$], 0, Rational[1, 2] Pi}}, Typeset`size$$ = {
    410., {370., 375.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, BoatContext`\[Theta]$59217$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {BoatContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[BoatContext`\[Theta]$$, BoatContext`\[Theta]$59217$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, 
      "Body" :> (BoatContext`wNormal = Normalize[{
           Sin[BoatContext`\[Theta]$$], 
           Cos[BoatContext`\[Theta]$$], 0}]; 
       BoatContext`renderBoatWithForces[
        BoatContext`boat, BoatContext`wNormal]), 
      "Specifications" :> {{BoatContext`\[Theta]$$, 0, Rational[1, 2] Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{457., {414., 421.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.664795427610566*^9, 3.664796074171056*^9, 
  3.664796131893669*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Quantity", "::", "compat"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Grams\\\\\\\"\\\"}]\
\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Newtons\\\\\\\"\\\"}]\\)\[NoBreak] are \
incompatible units \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/Quantity\\\", \
ButtonNote -> \\\"Quantity::compat\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6648048519600277`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Quantity", "::", "compat"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Grams\\\\\\\"\\\"}]\
\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Newtons\\\\\\\"\\\"}]\\)\[NoBreak] are \
incompatible units \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/Quantity\\\", \
ButtonNote -> \\\"Quantity::compat\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664804852017043*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Quantity", "::", "compat"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Grams\\\\\\\"\\\"}]\
\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Newtons\\\\\\\"\\\"}]\\)\[NoBreak] are \
incompatible units \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/Quantity\\\", \
ButtonNote -> \\\"Quantity::compat\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.66480485207798*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Quantity\\\", \\\"::\\\", \
\\\"compat\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664804852092556*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pkspec1"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The expression \[NoBreak]\\!\\(\\*RowBox[{\\\"Floor\\\", \
\\\"[\\\", FractionBox[RowBox[{RowBox[{\\\"(\\\", \
TemplateBox[List[\\\"85.60630212952496`\\\", \
RowBox[List[\\\"\\\\\\\"/\\\\\\\"\\\", \\\"\\\\[InvisibleSpace]\\\", \
SuperscriptBox[\\\"\\\\\\\"cm\\\\\\\"\\\", \\\"3\\\"]]], \\\"per centimeters \
cubed\\\", FractionBox[\\\"1\\\", \
SuperscriptBox[\\\"\\\\\\\"Centimeters\\\\\\\"\\\", \\\"3\\\"]]], \
\\\"QuantityPostfix\\\", Rule[SyntaxForm, Mod]], \\\")\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{TemplateBox[List[\\\"779.`\\\", \
\\\"\\\\\\\"g\\\\\\\"\\\", \\\"grams\\\", \\\"\\\\\\\"Grams\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], \\\"+\\\", \
RowBox[{\\\"blueFoamDensity\\\", \\\" \\\", RowBox[{\\\"(\\\", \
TemplateBox[List[\\\"1168.138297209672`\\\", \
RowBox[List[SuperscriptBox[\\\"\\\\\\\"cm\\\\\\\"\\\", \\\"3\\\"]]], \
\\\"centimeters cubed\\\", \
SuperscriptBox[\\\"\\\\\\\"Centimeters\\\\\\\"\\\", \\\"3\\\"]], \\\"Quantity\
\\\", Rule[SyntaxForm, Mod]], \\\")\\\"}]}]}], \\\")\\\"}]}], \
\\\"waterDensity\\\"], \\\"]\\\"}]\\)\[NoBreak] cannot be used as a part \
specification. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/Part\
\\\", ButtonNote -> \\\"Part::pkspec1\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664804852264674*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pkspec1"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The expression \[NoBreak]\\!\\(\\*RowBox[{\\\"Floor\\\", \
\\\"[\\\", FractionBox[RowBox[{RowBox[{\\\"(\\\", \
TemplateBox[List[\\\"85.60630212952496`\\\", \
RowBox[List[\\\"\\\\\\\"/\\\\\\\"\\\", \\\"\\\\[InvisibleSpace]\\\", \
SuperscriptBox[\\\"\\\\\\\"cm\\\\\\\"\\\", \\\"3\\\"]]], \\\"per centimeters \
cubed\\\", FractionBox[\\\"1\\\", \
SuperscriptBox[\\\"\\\\\\\"Centimeters\\\\\\\"\\\", \\\"3\\\"]]], \
\\\"QuantityPostfix\\\", Rule[SyntaxForm, Mod]], \\\")\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{TemplateBox[List[\\\"779.`\\\", \
\\\"\\\\\\\"g\\\\\\\"\\\", \\\"grams\\\", \\\"\\\\\\\"Grams\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], \\\"+\\\", \
RowBox[{\\\"blueFoamDensity\\\", \\\" \\\", RowBox[{\\\"(\\\", \
TemplateBox[List[\\\"1168.138297209672`\\\", \
RowBox[List[SuperscriptBox[\\\"\\\\\\\"cm\\\\\\\"\\\", \\\"3\\\"]]], \
\\\"centimeters cubed\\\", \
SuperscriptBox[\\\"\\\\\\\"Centimeters\\\\\\\"\\\", \\\"3\\\"]], \\\"Quantity\
\\\", Rule[SyntaxForm, Mod]], \\\")\\\"}]}]}], \\\")\\\"}]}], \
\\\"waterDensity\\\"], \\\"]\\\"}]\\)\[NoBreak] cannot be used as a part \
specification. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/Part\
\\\", ButtonNote -> \\\"Part::pkspec1\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664804852329775*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Quantity", "::", "compat"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Grams\\\\\\\"\\\"}]\
\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Newtons\\\\\\\"\\\"}]\\)\[NoBreak] are \
incompatible units \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/Quantity\\\", \
ButtonNote -> \\\"Quantity::compat\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664805594728249*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Quantity", "::", "compat"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Grams\\\\\\\"\\\"}]\
\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Newtons\\\\\\\"\\\"}]\\)\[NoBreak] are \
incompatible units \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/Quantity\\\", \
ButtonNote -> \\\"Quantity::compat\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664805594789694*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Quantity", "::", "compat"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Grams\\\\\\\"\\\"}]\
\\)\[NoBreak] and \
\[NoBreak]\\!\\(\\*RowBox[{\\\"\\\\\\\"Newtons\\\\\\\"\\\"}]\\)\[NoBreak] are \
incompatible units \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/Quantity\\\", \
ButtonNote -> \\\"Quantity::compat\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664805594851881*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[RowBox[{\\\"Quantity\\\", \\\"::\\\", \
\\\"compat\\\"}], \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during \
this calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664805594875792*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "pkspec1"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The expression \[NoBreak]\\!\\(\\*RowBox[{\\\"Floor\\\", \
\\\"[\\\", FractionBox[RowBox[{RowBox[{\\\"(\\\", \
TemplateBox[List[\\\"85.60630212952496`\\\", \
RowBox[List[\\\"\\\\\\\"/\\\\\\\"\\\", \\\"\\\\[InvisibleSpace]\\\", \
SuperscriptBox[\\\"\\\\\\\"cm\\\\\\\"\\\", \\\"3\\\"]]], \\\"per centimeters \
cubed\\\", FractionBox[\\\"1\\\", \
SuperscriptBox[\\\"\\\\\\\"Centimeters\\\\\\\"\\\", \\\"3\\\"]]], \
\\\"QuantityPostfix\\\", Rule[SyntaxForm, Mod]], \\\")\\\"}], \\\" \\\", \
RowBox[{\\\"(\\\", RowBox[{TemplateBox[List[\\\"779.`\\\", \
\\\"\\\\\\\"g\\\\\\\"\\\", \\\"grams\\\", \\\"\\\\\\\"Grams\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]], \\\"+\\\", \
RowBox[{\\\"blueFoamDensity\\\", \\\" \\\", RowBox[{\\\"(\\\", \
TemplateBox[List[\\\"1168.138297209672`\\\", \
RowBox[List[SuperscriptBox[\\\"\\\\\\\"cm\\\\\\\"\\\", \\\"3\\\"]]], \
\\\"centimeters cubed\\\", \
SuperscriptBox[\\\"\\\\\\\"Centimeters\\\\\\\"\\\", \\\"3\\\"]], \\\"Quantity\
\\\", Rule[SyntaxForm, Mod]], \\\")\\\"}]}]}], \\\")\\\"}]}], \
\\\"waterDensity\\\"], \\\"]\\\"}]\\)\[NoBreak] cannot be used as a part \
specification. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/Part\
\\\", ButtonNote -> \\\"Part::pkspec1\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664805594961051*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"plotAVSMoments", "[", 
  RowBox[{"boat", ",", "10"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotAVSMoments", "[", 
  RowBox[{"boat", ",", "20"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotAVSMoments", "[", 
  RowBox[{"boat", ",", "30"}], "]"}]}], "Input",
 CellChangeTimes->{{3.664780515869174*^9, 3.664780537715434*^9}, {
  3.664780582308146*^9, 3.664780590752708*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
4X+Jsrzw
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Theta]", HoldForm], TraditionalForm], 
    FormBox[
     TooltipBox[
      StyleBox[
       RowBox[{"\"m\"", "\[ThinSpace]", "\"N\""}], ShowStringCharacters -> 
       False], "meter newtons"], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 0.00699120096674613}}, {{
     0, 1.5707963267948966`}, {0., 0.00699120096674613}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.664738823271434*^9, 3.664776004309143*^9, 3.664776097618004*^9, 
   3.6647762181342688`*^9, {3.664776819555924*^9, 3.664776843606017*^9}, 
   3.6647770508222437`*^9, {3.664780545154067*^9, 3.6647805950425797`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
zJk7iUpATjXb4M/2BQzH8vBeqRHB/wBEuc5l
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Theta]", HoldForm], TraditionalForm], 
    FormBox[
     TooltipBox[
      StyleBox[
       RowBox[{"\"m\"", "\[ThinSpace]", "\"N\""}], ShowStringCharacters -> 
       False], "meter newtons"], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 0.0067949397137201705`}}, {{
     0, 1.5707963267948966`}, {0., 0.0067949397137201705`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.664738823271434*^9, 3.664776004309143*^9, 3.664776097618004*^9, 
   3.6647762181342688`*^9, {3.664776819555924*^9, 3.664776843606017*^9}, 
   3.6647770508222437`*^9, {3.664780545154067*^9, 3.6647805675921803`*^9}, 
   3.664780601442934*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["\[Theta]", HoldForm], TraditionalForm], 
    FormBox[
     TooltipBox[
      StyleBox[
       RowBox[{"\"m\"", "\[ThinSpace]", "\"N\""}], ShowStringCharacters -> 
       False], "meter newtons"], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 0.006754867977854612}}, {{
     0, 1.5707963267948966`}, {0., 0.006754867977854612}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.664738823271434*^9, 3.664776004309143*^9, 3.664776097618004*^9, 
   3.6647762181342688`*^9, {3.664776819555924*^9, 3.664776843606017*^9}, 
   3.6647770508222437`*^9, {3.664780545154067*^9, 3.6647805675921803`*^9}, 
   3.664780609997548*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DistributeDefinitions", "[", "\"\<BoatContext`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"stuff", "=", 
   RowBox[{"Parallelize", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"renderBoat", "[", 
       RowBox[{"boat", ",", 
        RowBox[{"Normalize", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0", ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], "]"}]}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{"Pi", "/", "2"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Pi", "/", "2"}], ")"}], "/", "100"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.664709015652692*^9, 3.664709026860196*^9}, {
   3.6647118239010077`*^9, 3.664711849121616*^9}, {3.664718805523068*^9, 
   3.664718808187344*^9}, {3.664718925108314*^9, 3.664718928172461*^9}, {
   3.664719247484769*^9, 3.664719250362578*^9}, {3.664719369843858*^9, 
   3.664719371708394*^9}, {3.664721754493384*^9, 3.6647217658064404`*^9}, {
   3.664728915497332*^9, 3.664728925998315*^9}, {3.6647291875352793`*^9, 
   3.6647291895650463`*^9}, {3.664729247123616*^9, 3.6647292523774652`*^9}, {
   3.6647292915476313`*^9, 3.664729296398697*^9}, 3.6647293446668987`*^9, {
   3.664729385044178*^9, 3.664729411383458*^9}, {3.6647295024253063`*^9, 
   3.6647295031337357`*^9}, {3.664731295563491*^9, 3.6647312958630533`*^9}, {
   3.664731531054188*^9, 3.664731551330654*^9}, {3.664731673047093*^9, 
   3.664731679988019*^9}, 3.664731799830337*^9, {3.6647321624619503`*^9, 
   3.664732249435789*^9}, {3.6647323027651443`*^9, 3.66473230951726*^9}, {
   3.664732923718096*^9, 3.664732933958198*^9}, {3.664733830968869*^9, 
   3.6647338314414787`*^9}, {3.664733861744796*^9, 3.664733864369083*^9}, {
   3.664734044975155*^9, 3.664734056864752*^9}, {3.6647341905060368`*^9, 
   3.664734193498386*^9}, {3.6647353675851517`*^9, 3.664735384413259*^9}, {
   3.664735489996181*^9, 3.664735509472116*^9}, {3.664735637405251*^9, 
   3.6647356448554287`*^9}, {3.6647360684676933`*^9, 3.664736072733885*^9}, {
   3.664736675920561*^9, 3.6647366782528543`*^9}, {3.664777258813867*^9, 
   3.664777259832592*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DistributeDefinitions", "[", "\"\<BoatContext`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"moments", "=", 
   RowBox[{"Parallelize", "[", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"calculateMoments", "[", 
       RowBox[{"boat", ",", 
        RowBox[{"Normalize", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0", ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], "]"}]}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{"Pi", "/", "2"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Pi", "/", "2"}], ")"}], "/", "100"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6647772896070023`*^9, 3.664777309721629*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mFunc", "=", 
  RowBox[{"ListInterpolation", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Norm", "[", 
       RowBox[{"Plus", "@@", 
        RowBox[{"moments", "[", 
         RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"n", ",", 
        RowBox[{"Length", "[", "moments", "]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.664777615508564*^9, 3.6647776250045233`*^9}, {
  3.664779065908239*^9, 3.664779147110649*^9}, {3.664779717061061*^9, 
  3.6647797592277937`*^9}}],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["InterpolatingFunction", "SummaryHead"], 
       "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open$$ = False}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0d0e+0GWXD66yoFRoBimQLc9X32o
OJo/LMhs9HgrzECEDgx7+FKrPyStvJ8t4uBAILTlJj5MtD+UDTRmAWvoQHbU
IGitzbo/I/rqebqR7ECPskWNIu7AP4uadmBIA+9AaLUTTCY5xD/RdqFqxxXw
QGtweUO+ysc/TBtLO7Jm8EAq5czmrEvLPyIlTI+9fvBAbhS5b1OQzj8qLb9z
Wl7wQO59nhjHDdE/CG0HA+vE70DmzixsQLXSP7+n6gZJte5AvPyxFWVU1D9B
ThwYApHtQKcGg9vTFtY/GXkDr6Ni7EDWbSCUHrvXPyJjiS7BI+tAGLEJabOC
2T+xfyfs/a7pQDjR6ZPzQds/aTeg2VMZ6ECbTpaxD+PcP7SORu7gouZAE6iO
63Wn3j8XK19cpQzlQGevKQzcJuA/xnYBPTdp40DO+LEwogvhP9OKXqvYlOFA
pLA1AD7s4T8tP8sZZIXfQByXH8nHveI/k5FwnQEV3ECeay+g9qDjPyMAakBR
mthAwW6lcBN15D8992GUItnUQFPgFuwFReU/2JxcrBJa0UDvP651nSbmP6Np
tSYDW8tALc6r+CL55j/4NNRKfCbEQHVKz4lN3ec/Vs07f0oNuEAsNe7FTb3o
P/hOWL0iGp9AhE5z+zuO6T9ICZFXGp2eQOdVHj/PcOo/YJsMiUTZtkDriy98
UETrPxAZtcYlgsJAXjA8ZKcT7D9yVxbcCJjJQNvCblqj9Ow/qEtbeD3D0ED5
gwdKjcbtPzJnnOugYdRAIjPGRxyq7j86f5x8pFbYQOwQ6z6Zfu8/dqKyLaTj
20CSroXwdSfwP/Lj65MAZd9AtMuoyHGY8D/n7wLbeKDhQCYAf53kAfE/WvyK
b+Y940CdK2j5KXTxP1sPNPWmCeVATA7PKlrk8T/u8AzI8rfmQEwI6VgBTfI/
G837Zkos6EBR+RUOe77yP7KOgCfZy+lApgH2v2so8z8++rzM3k3rQDPBU0dH
kPM/3nXXkvGM7EDFd8RV9QD0P83u+Yrc2+1AqEXoYBpq9D9+F42SUdHuQJAK
H/MR3PQ/h7FSfWaJ70CvhtNa9Ev1PyQKKJWaF/BAHxo7v0209T8MVsgmt1jw
QJSktap5JfY//BN/VZ9n8EBaRuOSHI/2P2L8hCCmR/BAJd8jApIB9z9Ixb+a
zj/vQCcv4kbycfc/a/WJquXJ7EB6llOIydr3P5NQBiQC6OhA0vTXUHNM+D98
QiqU32LgQHtqDxaUtvg/mu4a97WAzkCZnB5N+yH5P5B9xupB+JNA8vPjlA==

                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                PlotRange -> {{0., 1.5707963267948966`}, {0., 
                 67563.84748472695}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.5707963267948966`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{{}, {}, {
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA0d0e+0GWXD66yoFRoBimQLc9X32o
OJo/LMhs9HgrzECEDgx7+FKrPyStvJ8t4uBAILTlJj5MtD+UDTRmAWvoQHbU
IGitzbo/I/rqebqR7ECPskWNIu7AP4uadmBIA+9AaLUTTCY5xD/RdqFqxxXw
QGtweUO+ysc/TBtLO7Jm8EAq5czmrEvLPyIlTI+9fvBAbhS5b1OQzj8qLb9z
Wl7wQO59nhjHDdE/CG0HA+vE70DmzixsQLXSP7+n6gZJte5AvPyxFWVU1D9B
ThwYApHtQKcGg9vTFtY/GXkDr6Ni7EDWbSCUHrvXPyJjiS7BI+tAGLEJabOC
2T+xfyfs/a7pQDjR6ZPzQds/aTeg2VMZ6ECbTpaxD+PcP7SORu7gouZAE6iO
63Wn3j8XK19cpQzlQGevKQzcJuA/xnYBPTdp40DO+LEwogvhP9OKXqvYlOFA
pLA1AD7s4T8tP8sZZIXfQByXH8nHveI/k5FwnQEV3ECeay+g9qDjPyMAakBR
mthAwW6lcBN15D8992GUItnUQFPgFuwFReU/2JxcrBJa0UDvP651nSbmP6Np
tSYDW8tALc6r+CL55j/4NNRKfCbEQHVKz4lN3ec/Vs07f0oNuEAsNe7FTb3o
P/hOWL0iGp9AhE5z+zuO6T9ICZFXGp2eQOdVHj/PcOo/YJsMiUTZtkDriy98
UETrPxAZtcYlgsJAXjA8ZKcT7D9yVxbcCJjJQNvCblqj9Ow/qEtbeD3D0ED5
gwdKjcbtPzJnnOugYdRAIjPGRxyq7j86f5x8pFbYQOwQ6z6Zfu8/dqKyLaTj
20CSroXwdSfwP/Lj65MAZd9AtMuoyHGY8D/n7wLbeKDhQCYAf53kAfE/WvyK
b+Y940CdK2j5KXTxP1sPNPWmCeVATA7PKlrk8T/u8AzI8rfmQEwI6VgBTfI/
G837Zkos6EBR+RUOe77yP7KOgCfZy+lApgH2v2so8z8++rzM3k3rQDPBU0dH
kPM/3nXXkvGM7EDFd8RV9QD0P83u+Yrc2+1AqEXoYBpq9D9+F42SUdHuQJAK
H/MR3PQ/h7FSfWaJ70CvhtNa9Ev1PyQKKJWaF/BAHxo7v0209T8MVsgmt1jw
QJSktap5JfY//BN/VZ9n8EBaRuOSHI/2P2L8hCCmR/BAJd8jApIB9z9Ixb+a
zj/vQCcv4kbycfc/a/WJquXJ7EB6llOIydr3P5NQBiQC6OhA0vTXUHNM+D98
QiqU32LgQHtqDxaUtvg/mu4a97WAzkCZnB5N+yH5P5B9xupB+JNA8vPjlA==

                   "]]}}}, {
               DisplayFunction -> Identity, AspectRatio -> 1, 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
                  AbsolutePointSize[6], "ScalingFunctions" -> None}, 
                PlotRange -> {{0., 1.5707963267948966`}, {0., 
                 67563.84748472695}}, PlotRangeClipping -> True, 
                PlotRangePadding -> {{
                   Scaled[0.1], 
                   Scaled[0.1]}, {
                   Scaled[0.1], 
                   Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "1.5707963267948966`"}], "}"}], "}"}],
                     "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"scalar\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic], BaselinePosition -> 
        Baseline], DynamicModuleValues :> {}], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("InterpolatingFunction[{{0., 1.5708}}, <>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.6647797410525217`*^9, 3.664779760190716*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"mFunc", "[", "\[Theta]", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664779435005352*^9, 3.664779438399413*^9}, {
  3.664779571512601*^9, 3.664779574976934*^9}, {3.66477979190751*^9, 
  3.664779816053171*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{BoatContext`\[Theta]$$ = 0., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[BoatContext`\[Theta]$$], 0, Rational[1, 2] Pi}}, Typeset`size$$ = {
    128., {7., 17.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, BoatContext`\[Theta]$269163$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {BoatContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[BoatContext`\[Theta]$$, BoatContext`\[Theta]$269163$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      BoatContext`mFunc[BoatContext`\[Theta]$$], 
      "Specifications" :> {{BoatContext`\[Theta]$$, 0, Rational[1, 2] Pi}}, 
      "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{251., {53., 60.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.664779439017942*^9, {3.66477957273923*^9, 3.664779575390427*^9}, {
   3.664779790520459*^9, 3.664779816563642*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"UnitConvert", "[", 
    RowBox[{
     RowBox[{"mFunc", "[", "n", "]"}], ",", "\"\<NewtonMeters\>\""}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664779155461174*^9, 3.664779257730234*^9}, {
   3.664779387529612*^9, 3.664779412480508*^9}, {3.6647794439350557`*^9, 
   3.664779495429886*^9}, 3.664779775136894*^9, {3.664779833186243*^9, 
   3.664779836109095*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
ndUPWjdD8cAzvT9S5POiHT+p1ZL4H936JJA=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox[
     TagBox["n", HoldForm], TraditionalForm], 
    FormBox[
     TooltipBox[
      StyleBox[
       RowBox[{"\"m\"", "\[ThinSpace]", "\"N\""}], ShowStringCharacters -> 
       False], "meter newtons"], TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {0., 0.006756385052552872}}, {{
     0, 1.5707963267948966`}, {0., 0.006756385052552872}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.664779139920205*^9, 3.664779258160388*^9}, {
   3.664779394673677*^9, 3.664779412966732*^9}, {3.664779478101461*^9, 
   3.664779496497158*^9}, 3.664779605192531*^9, 3.664779775949435*^9, 
   3.664779838838786*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Interpolation", "[", "\[IndentingNewLine]", 
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Norm", "[", 
     RowBox[{"Plus", "@@", 
      RowBox[{"calculateMoments", "[", 
       RowBox[{"boat", ",", 
        RowBox[{"Normalize", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], ",", "0", ",", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "}"}], "]"}]}], "]"}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", 
      RowBox[{"Pi", "/", "2"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Pi", "/", "2"}], ")"}], "/", "10"}]}], "}"}]}], 
   "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.664777801141796*^9, 3.664777845691197*^9}, {
  3.664777917298698*^9, 3.664777923288712*^9}, {3.6647781227662783`*^9, 
  3.664778124473628*^9}, {3.6647781760319147`*^9, 3.664778215883108*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(\\*FractionBox[\\\"1\\\
\", \\\"0\\\"]\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664778131127932*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \
\[NoBreak]\\!\\(\\*RowBox[{\\\"0\\\", \\\" \\\", \\\"ComplexInfinity\\\"}]\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.664778131159789*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"ListPlot", "::", "nonopt"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Options expected (instead of \[NoBreak]\\!\\(\\*RowBox[{\\\
\"{\\\", RowBox[{\\\"\[Theta]\\\", \\\",\\\", \\\"0\\\", \\\",\\\", \
FractionBox[\\\"\[Pi]\\\", \\\"2\\\"], \\\",\\\", FractionBox[\\\"\[Pi]\\\", \
\\\"20\\\"]}], \\\"}\\\"}]\\)\[NoBreak]) beyond position \
\[NoBreak]\\!\\(\\*RowBox[{\\\"1\\\"}]\\)\[NoBreak] in \
\[NoBreak]\\!\\(\\*RowBox[{\\\"ListPlot\\\", \\\"[\\\", \
RowBox[{SqrtBox[RowBox[{SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\[Cross]\\\", \
RowBox[{\\\"Quantity\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\
\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{\\\"Quantity\\\", \\\"[\\\", RowBox[{\\\"0.`\\\", \\\",\\\", RowBox[{\
\\\"Times\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\
\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"]\\\"}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Quantity\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}]}], \\\"]\\\"}], \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\[Cross]\\\", \
RowBox[{\\\"Quantity\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\
\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{\\\"Quantity\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\
\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Quantity\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\
\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Sin\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}]}], \\\"]\\\"}], \\\"2\\\"], \\\"+\\\", \
SuperscriptBox[RowBox[{\\\"Abs\\\", \\\"[\\\", \
RowBox[{RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"3\\\", \\\"\[RightSkeleton]\\\"}], \\\"}\\\"}], \\\"\[Cross]\\\", \
RowBox[{\\\"Quantity\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\
\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}], \\\"+\\\", \
RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\
\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", \
RowBox[{\\\"Cos\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \
\\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \\\", RowBox[{\\\"Quantity\\\", \
\\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\
\"}], \\\"]\\\"}]}], \\\"+\\\", RowBox[{RowBox[{\\\"Power\\\", \\\"[\\\", \
RowBox[{\\\"\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\
\\\"}], \\\" \\\", RowBox[{\\\"Quantity\\\", \\\"[\\\", RowBox[{\\\"\
\[LeftSkeleton]\\\", \\\"2\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}], \\\" \
\\\", RowBox[{\\\"Sin\\\", \\\"[\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"1\\\", \\\"\[RightSkeleton]\\\"}], \\\"]\\\"}]}]}], \\\"]\\\"}], \
\\\"2\\\"]}]], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"\[Theta]\\\", \
\\\",\\\", \\\"0\\\", \\\",\\\", FractionBox[\\\"\[Pi]\\\", \\\"2\\\"], \\\",\
\\\", FractionBox[\\\"\[Pi]\\\", \\\"20\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\)\
\[NoBreak]. An option must be a rule or a list of rules. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/nonopt\\\", \
ButtonNote -> \\\"ListPlot::nonopt\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6647781312466803`*^9}],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"\[Sqrt]", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               
               TemplateBox[{
                "310.97700000000003`",
                 RowBox[{
                  "\"g\"", "\[ThinSpace]", "\"m\"", "\[InvisibleSpace]", 
                   "\"/\"", "\[InvisibleSpace]", 
                   SuperscriptBox["\"s\"", "2"]}],
                 "gram meters per second squared",FractionBox[
                  RowBox[{"\"Grams\"", " ", "\"Meters\""}], 
                  SuperscriptBox["\"Seconds\"", "2"]]},
                "Quantity"], ")"}]}], 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}], "2"]}]]], ",", 
            
            
            TemplateBox[{
             "0.`",RowBox[{
               "\"g\"", "\[ThinSpace]", "\"m\"", "\[InvisibleSpace]", "\"/\"",
                 "\[InvisibleSpace]", 
                SuperscriptBox["\"s\"", "2"]}],
              "gram meters per second squared",FractionBox[
               RowBox[{"\"Grams\"", " ", "\"Meters\""}], 
               SuperscriptBox["\"Seconds\"", "2"]]},
             "Quantity"], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               
               TemplateBox[{
                "310.97700000000003`",
                 RowBox[{
                  "\"g\"", "\[ThinSpace]", "\"m\"", "\[InvisibleSpace]", 
                   "\"/\"", "\[InvisibleSpace]", 
                   SuperscriptBox["\"s\"", "2"]}],
                 "gram meters per second squared",FractionBox[
                  RowBox[{"\"Grams\"", " ", "\"Meters\""}], 
                  SuperscriptBox["\"Seconds\"", "2"]]},
                "Quantity"], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}], "2"]}]]]}], 
           "}"}], "\[Cross]", 
          RowBox[{"(", 
           
           TemplateBox[{
            "Indeterminate","\"cm\"","centimeters","\"Centimeters\""},
            "Quantity"], ")"}]}], "+", 
         TemplateBox[{"0.`",RowBox[{"\"g\"", "\[ThinSpace]", 
             SuperscriptBox["\"cm\"", "2"], "\[NegativeMediumSpace]", "\"/\"",
              "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "2"]}],
           "gram centimeters squared per second squared",FractionBox[
            RowBox[{
              SuperscriptBox["\"Centimeters\"", "2"], " ", "\"Grams\""}], 
            SuperscriptBox["\"Seconds\"", "2"]]},
          "Quantity"], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            
            TemplateBox[{
             "3.5353991734154984`*^-12",RowBox[{"\"g\"", "\[ThinSpace]", 
                SuperscriptBox["\"cm\"", "2"], "\[NegativeMediumSpace]", 
                "\"/\"", "\[InvisibleSpace]", 
                SuperscriptBox["\"s\"", "2"]}],
              "gram centimeters squared per second squared",FractionBox[
               RowBox[{
                 SuperscriptBox["\"Centimeters\"", "2"], " ", "\"Grams\""}], 
               SuperscriptBox["\"Seconds\"", "2"]]},
             "Quantity"], ")"}]}], 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}], "2"]}]]]}], "]"}],
        "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               
               TemplateBox[{
                "310.97700000000003`",
                 RowBox[{
                  "\"g\"", "\[ThinSpace]", "\"m\"", "\[InvisibleSpace]", 
                   "\"/\"", "\[InvisibleSpace]", 
                   SuperscriptBox["\"s\"", "2"]}],
                 "gram meters per second squared",FractionBox[
                  RowBox[{"\"Grams\"", " ", "\"Meters\""}], 
                  SuperscriptBox["\"Seconds\"", "2"]]},
                "Quantity"], ")"}]}], 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}], "2"]}]]], ",", 
            
            
            TemplateBox[{
             "0.`",RowBox[{
               "\"g\"", "\[ThinSpace]", "\"m\"", "\[InvisibleSpace]", "\"/\"",
                 "\[InvisibleSpace]", 
                SuperscriptBox["\"s\"", "2"]}],
              "gram meters per second squared",FractionBox[
               RowBox[{"\"Grams\"", " ", "\"Meters\""}], 
               SuperscriptBox["\"Seconds\"", "2"]]},
             "Quantity"], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               
               TemplateBox[{
                "310.97700000000003`",
                 RowBox[{
                  "\"g\"", "\[ThinSpace]", "\"m\"", "\[InvisibleSpace]", 
                   "\"/\"", "\[InvisibleSpace]", 
                   SuperscriptBox["\"s\"", "2"]}],
                 "gram meters per second squared",FractionBox[
                  RowBox[{"\"Grams\"", " ", "\"Meters\""}], 
                  SuperscriptBox["\"Seconds\"", "2"]]},
                "Quantity"], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}], "2"]}]]]}], 
           "}"}], "\[Cross]", 
          RowBox[{"(", 
           
           TemplateBox[{
            "Indeterminate","\"cm\"","centimeters","\"Centimeters\""},
            "Quantity"], ")"}]}], "+", 
         TemplateBox[{"0.`",RowBox[{"\"g\"", "\[ThinSpace]", 
             SuperscriptBox["\"cm\"", "2"], "\[NegativeMediumSpace]", "\"/\"",
              "\[InvisibleSpace]", 
             SuperscriptBox["\"s\"", "2"]}],
           "gram centimeters squared per second squared",FractionBox[
            RowBox[{
              SuperscriptBox["\"Centimeters\"", "2"], " ", "\"Grams\""}], 
            SuperscriptBox["\"Seconds\"", "2"]]},
          "Quantity"], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            
            TemplateBox[{
             RowBox[{"-", "3.5353991734154983`*^-16"}],
              RowBox[{"\"g\"", "\[ThinSpace]", 
                SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", 
                "\"/\"", "\[InvisibleSpace]", 
                SuperscriptBox["\"s\"", "2"]}],
              "gram meters squared per second squared",FractionBox[
               RowBox[{"\"Grams\"", " ", 
                 SuperscriptBox["\"Meters\"", "2"]}], 
               SuperscriptBox["\"Seconds\"", "2"]]},
             "Quantity"], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}], "2"]}]]]}], "]"}],
        "2"], "+", 
      SuperscriptBox[
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
              RowBox[{"(", 
               
               TemplateBox[{
                "310.97700000000003`",
                 RowBox[{
                  "\"g\"", "\[ThinSpace]", "\"m\"", "\[InvisibleSpace]", 
                   "\"/\"", "\[InvisibleSpace]", 
                   SuperscriptBox["\"s\"", "2"]}],
                 "gram meters per second squared",FractionBox[
                  RowBox[{"\"Grams\"", " ", "\"Meters\""}], 
                  SuperscriptBox["\"Seconds\"", "2"]]},
                "Quantity"], ")"}]}], 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}], "2"]}]]], ",", 
            
            
            TemplateBox[{
             "0.`",RowBox[{
               "\"g\"", "\[ThinSpace]", "\"m\"", "\[InvisibleSpace]", "\"/\"",
                 "\[InvisibleSpace]", 
                SuperscriptBox["\"s\"", "2"]}],
              "gram meters per second squared",FractionBox[
               RowBox[{"\"Grams\"", " ", "\"Meters\""}], 
               SuperscriptBox["\"Seconds\"", "2"]]},
             "Quantity"], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               
               TemplateBox[{
                "310.97700000000003`",
                 RowBox[{
                  "\"g\"", "\[ThinSpace]", "\"m\"", "\[InvisibleSpace]", 
                   "\"/\"", "\[InvisibleSpace]", 
                   SuperscriptBox["\"s\"", "2"]}],
                 "gram meters per second squared",FractionBox[
                  RowBox[{"\"Grams\"", " ", "\"Meters\""}], 
                  SuperscriptBox["\"Seconds\"", "2"]]},
                "Quantity"], ")"}], " ", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
             SqrtBox[
              RowBox[{
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], "2"], "+", 
               SuperscriptBox[
                RowBox[{"Abs", "[", 
                 RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}], "2"]}]]]}], 
           "}"}], "\[Cross]", 
          RowBox[{"(", 
           
           TemplateBox[{
            "Indeterminate","\"cm\"","centimeters","\"Centimeters\""},
            "Quantity"], ")"}]}], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
           RowBox[{"(", 
            TemplateBox[{"0.`",RowBox[{"\"g\"", "\[ThinSpace]", 
                SuperscriptBox["\"cm\"", "2"], "\[NegativeMediumSpace]", 
                "\"/\"", "\[InvisibleSpace]", 
                SuperscriptBox["\"s\"", "2"]}],
              "gram centimeters squared per second squared",FractionBox[
               RowBox[{
                 SuperscriptBox["\"Centimeters\"", "2"], " ", "\"Grams\""}], 
               SuperscriptBox["\"Seconds\"", "2"]]},
             "Quantity"], ")"}]}], 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}], "2"]}]]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            
            TemplateBox[{
             "3.5353991734154983`*^-16",RowBox[{"\"g\"", "\[ThinSpace]", 
                SuperscriptBox["\"m\"", "2"], "\[NegativeMediumSpace]", 
                "\"/\"", "\[InvisibleSpace]", 
                SuperscriptBox["\"s\"", "2"]}],
              "gram meters squared per second squared",FractionBox[
               RowBox[{"\"Grams\"", " ", 
                 SuperscriptBox["\"Meters\"", "2"]}], 
               SuperscriptBox["\"Seconds\"", "2"]]},
             "Quantity"], ")"}], " ", 
           RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"Abs", "[", 
              RowBox[{"Sin", "[", "\[Theta]", "]"}], "]"}], "2"]}]]]}], "]"}],
        "2"]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     FractionBox["\[Pi]", "2"], ",", 
     FractionBox["\[Pi]", "20"]}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6647779397027187`*^9, 3.664778131275385*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Norm", "[", 
     RowBox[{"Plus", "@@", 
      RowBox[{"moments", "[", 
       RowBox[{"[", "n", "]"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", 
      RowBox[{"Length", "[", "moments", "]"}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.664777350953792*^9, 3.6647774337044992`*^9}, {
  3.6647775580029297`*^9, 3.664777565367299*^9}, {3.664777611271276*^9, 
  3.664777639341077*^9}, {3.664777708420026*^9, 3.664777740701096*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1lAtQVGUUxwGx0cmMTZ4Sujx8JA9BEbAI/strBZbHLvvAjEJHExQBJRzA
xMVE5VENEcyCay4owgDyyAQlxQVEXoWDIBEDaYhbAguoUMAMQzadb2fu7Pzu
b765957zP8dyX5zogJ6Ojs6B19d/////pj016gh7lelV0A185BlV0H2zkXgF
6l/xFSLJQ2IDWLfoLnHeHCY2xHfK1lvR/FFiUzjGnB8Y5P1F/C4sLddPajaM
E3MRauJg7L5FS2wFxVz1qszCSWIbrBbHCM4enyLeiLEwR0E8Z5p4M46VBHAb
gxlvgUWNx3pNNGM7FJz+UXjmBGMHvGo7uePRF4wd4WE2cejoZ4yd4NNSmbh1
G+NtKJi693dlI3v+doQL9fPKbRg7I8Jxf77yMHvfHfh64r7qvZvse1zw+KiO
pGAlY1eEdiUNDEdMELuhoMI25kk5q8dOWP1jtpjaOUb8Pux70rMuLGf8ATKU
69NPmD0ndodl5k4zZ2dW3w9xuK5jYYj/J7EHOuUPk92iNMSeWHAU1qdlPyMG
0i4uReqnU7/kQPHKQCfb7KfkeYgtrDZXpI2Q58FXE2566uQf5L2wyXjuujLu
CXkvRD9eU2P84Hfy3pB57W/tKBsi7w3l8dmUvRWD5H1Q3qJXVVQ3QN4H7p8v
nOce6ifvi0btxXsxDn3kfRF/xyvDUJflzw+KLPtfR0cekPcDrz2pyuhyF3k+
1sZmW/ZHt5HnY6ZjcplK3Ux+F6wTaiX2/Nvkd8Hll1OV+Z9eJ+8PjcN8H+fS
ZfL+6Hw5ra3WyyAfgJLSF81lBsXkAxDx890razpryQeiOEf09sHtDeQDoU1F
yjupTeQFWCpdG5dc0kpeAAPbFG0ir5N8EEy7bsh+utpNPgjxef2r99X2kA/G
UMc1C+1vveSD0c3PCpabs/qFoGH6+6LRMFbfEMwIBnIcjrD6h8IvbT65vZT6
g1D0b7RMiWqn/slDYddgmON9mvqrDkUPdzrxiIL1X4hF9RsWkTkjdF6IbzYL
n/+QS/mRCzGzght9TUH5UguRIF/XPJjL8ifCYNa304uZlE+IsLxmlaF5AuVX
LsKeHt1saynlWy2Cd9MNji6P5T8MffXOxRaONB8Iw6X2W5xxM5oneRgWZK4m
QbPE6jB4c5ykZ8vY/Ikh6tKXPPuE5hNinOOc84YdzbNcjKnOweGUWmK1GAP5
NokmLmz+Jahq667LySCGBD175LXmWmK5BKoXqvkJK9onagkqTNf5jwvYfpHC
aG/5bOpBYkjxyG3Elsf2l1yKtE13hp+K2XkprsR+ZeTrwc7LsGxCcyHyLnu+
DFu5jfze2+z9ZSgSxxe6+tL3qWWoGIywLvyY7ZtwhCSNGauUVF+E48wGf+79
l6x/4dBpnT/WK6H9rn7tpU15/fls/nZDP/kt1ZdzlGfsRvLAHFzmcvEvt8bq
Kw==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 101.}, {0, 67533.32555940728}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.664777352897068*^9, 3.6647774190093813`*^9}, {
   3.664777455892329*^9, 3.6647774803697357`*^9}, 3.6647775683824472`*^9, {
   3.664777634741067*^9, 3.664777640383835*^9}, {3.6647777123772173`*^9, 
   3.664777741585576*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["stuff"], "Input",
 CellChangeTimes->{{3.664777118173255*^9, 3.6647771186904173`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   Graphics3DBox[{
     {RGBColor[0, 0, 1], Opacity[0.2], 
      InterpretationBox[
       ConicHullRegion3DBox[{-4.682540070840178, 0., 0.}, {{0, 0, 1}, {0, 1, 
        0}}, {{-1, 0, 0}}],
       HalfSpace[{1, 0, 0}, {-4.682540070840178, 0., 0.}]]}, 
     GraphicsComplex3DBox[{{-5., 5., 5.}, {5., -5., 5.}, {5., 5., 
      5.}, {-5., -5., 5.}, {-5., -5., -5.}, {5., 5., -5.}, {
      5., -5., -5.}, {-5., 
      5., -5.}}, {Polygon3DBox[{1, 2, 3}], Polygon3DBox[{2, 1, 4}], 
       Polygon3DBox[{5, 6, 7}], Polygon3DBox[{6, 5, 8}], 
       Polygon3DBox[{5, 2, 4}], Polygon3DBox[{2, 5, 7}], 
       Polygon3DBox[{2, 6, 3}], Polygon3DBox[{6, 2, 7}], 
       Polygon3DBox[{6, 1, 3}], Polygon3DBox[{1, 6, 8}], 
       Polygon3DBox[{5, 1, 8}], Polygon3DBox[{1, 5, 4}]}]},
    ImageSize->{180., 184.4233604620662},
    ViewPoint->{0.5115695364978496, -2.0805398262988355`, -2.619093476856407},
    
    ViewVertical->{
     0.8600340329207883, -0.5254209710287688, -0.2748173264229128}], ",", 
   Graphics3DBox[{
     {RGBColor[0, 0, 1], Opacity[0.2], 
      InterpretationBox[
       ConicHullRegion3DBox[{-4.672247183525656, 0., -0.740011255220602}, 
        NCache[{{-Tan[Rational[1, 20] Pi], 0, 1}, {0, 1, 
          0}}, {{-0.15838444032453627`, 0, 1}, {0, 1, 0}}], 
        NCache[{{(-
            Cos[Rational[1, 20] Pi]) (Cos[Rational[1, 20] Pi]^2 + 
             Sin[Rational[1, 20] Pi]^2)^Rational[-1, 2], 
           0, (-Sin[Rational[1, 20] Pi]) (Cos[Rational[1, 20] Pi]^2 + 
             Sin[Rational[1, 20] Pi]^2)^
            Rational[-1, 2]}}, {{-0.9876883405951378, 
           0, -0.15643446504023087`}}]],
       HalfSpace[{
        Cos[Rational[1, 20] Pi] (Cos[Rational[1, 20] Pi]^2 + 
           Sin[Rational[1, 20] Pi]^2)^Rational[-1, 2], 0, 
         Sin[Rational[1, 20] Pi] (Cos[Rational[1, 20] Pi]^2 + 
           Sin[Rational[1, 20] Pi]^2)^Rational[-1, 2]}, {-4.672247183525656, 
        0., -0.740011255220602}]]}, 
     GraphicsComplex3DBox[{{-5., 5., 5.}, {5., -5., 5.}, {5., 5., 
      5.}, {-5., -5., 5.}, {-5., -5., -5.}, {5., 5., -5.}, {
      5., -5., -5.}, {-5., 
      5., -5.}}, {Polygon3DBox[{1, 2, 3}], Polygon3DBox[{2, 1, 4}], 
       Polygon3DBox[{5, 6, 7}], Polygon3DBox[{6, 5, 8}], 
       Polygon3DBox[{5, 2, 4}], Polygon3DBox[{2, 5, 7}], 
       Polygon3DBox[{2, 6, 3}], Polygon3DBox[{6, 2, 7}], 
       Polygon3DBox[{6, 1, 3}], Polygon3DBox[{1, 6, 8}], 
       Polygon3DBox[{5, 1, 8}], Polygon3DBox[{1, 5, 4}]}]},
    ImageSize->{180., 184.51481309516694`},
    ViewPoint->{0.22739243894010303`, -2.75943865006781, -1.9451969091135255`},
    ViewVertical->{0.5089490483901535, -0.9676991687446932, 
     0.24846791854164613`}], ",", 
   Graphics3DBox[{
     {RGBColor[0, 0, 1], Opacity[0.2], 
      InterpretationBox[
       ConicHullRegion3DBox[{-4.6933843693250115`, 0., -1.5249730235853534`}, 
        NCache[{{(-(-1 + 5^Rational[1, 2])) (2 (5 + 5^Rational[1, 2]))^
            Rational[-1, 2], 0, 1}, {0, 1, 
          0}}, {{-0.32491969623290634`, 0, 1}, {0, 1, 0}}], 
        NCache[{{-((Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])/(
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2] + 
             Rational[1, 16] (-1 + 5^Rational[1, 2])^2))^Rational[1, 2], 
           0, (Rational[-1, 4] (-1 + 5^Rational[1, 2])) (Rational[5, 8] + 
             Rational[1, 8] 5^Rational[1, 2] + 
             Rational[1, 16] (-1 + 5^Rational[1, 2])^2)^
            Rational[-1, 2]}}, {{-0.9510565162951535, 
           0, -0.30901699437494745`}}]],
       HalfSpace[{((Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])/(
          Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2] + 
          Rational[1, 16] (-1 + 5^Rational[1, 2])^2))^Rational[1, 2], 
         0, (Rational[1, 4] (-1 + 5^Rational[1, 2])) (Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2] + 
           Rational[1, 16] (-1 + 5^Rational[1, 2])^2)^
          Rational[-1, 2]}, {-4.6933843693250115`, 
        0., -1.5249730235853534`}]]}, 
     GraphicsComplex3DBox[{{-5., 5., 5.}, {5., -5., 5.}, {5., 5., 
      5.}, {-5., -5., 5.}, {-5., -5., -5.}, {5., 5., -5.}, {
      5., -5., -5.}, {-5., 
      5., -5.}}, {Polygon3DBox[{1, 2, 3}], Polygon3DBox[{2, 1, 4}], 
       Polygon3DBox[{5, 6, 7}], Polygon3DBox[{6, 5, 8}], 
       Polygon3DBox[{5, 2, 4}], Polygon3DBox[{2, 5, 7}], 
       Polygon3DBox[{2, 6, 3}], Polygon3DBox[{6, 2, 7}], 
       Polygon3DBox[{6, 1, 3}], Polygon3DBox[{1, 6, 8}], 
       Polygon3DBox[{5, 1, 8}], Polygon3DBox[{1, 5, 4}]}]},
    ImageSize->{180., 184.32712805874397`},
    ViewPoint->{-0.48113248828876887`, -2.528212577092515, \
-2.1969644270548128`},
    ViewVertical->{
     0.4909720100372645, -1.0135779613743274`, -0.018037466958947042`}], ",", 
   
   Graphics3DBox[{
     {RGBColor[0, 0, 1], Opacity[0.2], 
      InterpretationBox[
       ConicHullRegion3DBox[{-4.565419504721089, 0., -2.3261974252736453`}, 
        NCache[{{-Tan[Rational[3, 20] Pi], 0, 1}, {0, 1, 
          0}}, {{-0.5095254494944288, 0, 1}, {0, 1, 0}}], 
        NCache[{{(-
            Cos[Rational[3, 20] Pi]) (Cos[Rational[3, 20] Pi]^2 + 
             Sin[Rational[3, 20] Pi]^2)^Rational[-1, 2], 
           0, (-Sin[Rational[3, 20] Pi]) (Cos[Rational[3, 20] Pi]^2 + 
             Sin[Rational[3, 20] Pi]^2)^
            Rational[-1, 2]}}, {{-0.8910065241883679, 
           0, -0.45399049973954675`}}]],
       HalfSpace[{
        Cos[Rational[3, 20] Pi] (Cos[Rational[3, 20] Pi]^2 + 
           Sin[Rational[3, 20] Pi]^2)^Rational[-1, 2], 0, 
         Sin[Rational[3, 20] Pi] (Cos[Rational[3, 20] Pi]^2 + 
           Sin[Rational[3, 20] Pi]^2)^Rational[-1, 2]}, {-4.565419504721089, 
        0., -2.3261974252736453`}]]}, 
     GraphicsComplex3DBox[{{-5., 5., 5.}, {5., -5., 5.}, {5., 5., 
      5.}, {-5., -5., 5.}, {-5., -5., -5.}, {5., 5., -5.}, {
      5., -5., -5.}, {-5., 
      5., -5.}}, {Polygon3DBox[{1, 2, 3}], Polygon3DBox[{2, 1, 4}], 
       Polygon3DBox[{5, 6, 7}], Polygon3DBox[{6, 5, 8}], 
       Polygon3DBox[{5, 2, 4}], Polygon3DBox[{2, 5, 7}], 
       Polygon3DBox[{2, 6, 3}], Polygon3DBox[{6, 2, 7}], 
       Polygon3DBox[{6, 1, 3}], Polygon3DBox[{1, 6, 8}], 
       Polygon3DBox[{5, 1, 8}], Polygon3DBox[{1, 5, 4}]}]},
    ImageSize->{180., 185.47052728362192`},
    ViewPoint->{1.1166148187114224`, -3.156934978535621, 0.48675752478246603`},
    ViewVertical->{0.5827189992665321, -0.3570637630973357, 
     0.8597612725874911}], ",", 
   Graphics3DBox[{
     {RGBColor[0, 0, 1], Opacity[0.2], 
      InterpretationBox[
       ConicHullRegion3DBox[{-4.246711488971656, 0., -3.0854165009068772`}, 
        NCache[{{(-(2 (5 - 5^Rational[1, 2]))^Rational[1, 2])/(1 + 
           5^Rational[1, 2]), 0, 1}, {0, 1, 
          0}}, {{-0.7265425280053608, 0, 1}, {0, 1, 0}}], 
        NCache[{{(
            Rational[-1, 4] (1 + 5^Rational[1, 2])) (Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2] + 
             Rational[1, 16] (1 + 5^Rational[1, 2])^2)^Rational[-1, 2], 
           0, -((Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])/(
             Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2] + 
             Rational[1, 16] (1 + 5^Rational[1, 2])^2))^
            Rational[1, 2]}}, {{-0.8090169943749475, 
           0, -0.5877852522924731}}]],
       HalfSpace[{(
          Rational[1, 4] (1 + 5^Rational[1, 2])) (Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2] + 
           Rational[1, 16] (1 + 5^Rational[1, 2])^2)^Rational[-1, 2], 
         0, ((Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])/(
          Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2] + 
          Rational[1, 16] (1 + 5^Rational[1, 2])^2))^
         Rational[1, 2]}, {-4.246711488971656, 0., -3.0854165009068772`}]]}, 
     GraphicsComplex3DBox[{{-5., 5., 5.}, {5., -5., 5.}, {5., 5., 
      5.}, {-5., -5., 5.}, {-5., -5., -5.}, {5., 5., -5.}, {
      5., -5., -5.}, {-5., 
      5., -5.}}, {Polygon3DBox[{1, 2, 3}], Polygon3DBox[{2, 1, 4}], 
       Polygon3DBox[{5, 6, 7}], Polygon3DBox[{6, 5, 8}], 
       Polygon3DBox[{5, 2, 4}], Polygon3DBox[{2, 5, 7}], 
       Polygon3DBox[{2, 6, 3}], Polygon3DBox[{6, 2, 7}], 
       Polygon3DBox[{6, 1, 3}], Polygon3DBox[{1, 6, 8}], 
       Polygon3DBox[{5, 1, 8}], Polygon3DBox[{1, 5, 4}]}]},
    ImageSize->{180., 188.39348439839435`},
    ViewPoint->{1.1588799241678802`, -3.039185444273052, -0.9329250541600108},
    
    ViewVertical->{0.628008055244573, -0.6365370840609001, 
     0.5729310503723912}], ",", 
   Graphics3DBox[{
     {RGBColor[0, 0, 1], Opacity[0.2], 
      InterpretationBox[
       ConicHullRegion3DBox[{-3.7417881557491848`, 
        0., -3.7417881557491848`}, {{-1, 0, 1}, {0, 1, 0}}, 
        NCache[{{-2^Rational[-1, 2], 
           0, -2^Rational[-1, 2]}}, {{-0.7071067811865475, 
           0, -0.7071067811865475}}]],
       HalfSpace[{
        2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {-3.7417881557491848`, 
        0., -3.7417881557491848`}]]}, 
     GraphicsComplex3DBox[{{-5., 5., 5.}, {5., -5., 5.}, {5., 5., 
      5.}, {-5., -5., 5.}, {-5., -5., -5.}, {5., 5., -5.}, {
      5., -5., -5.}, {-5., 
      5., -5.}}, {Polygon3DBox[{1, 2, 3}], Polygon3DBox[{2, 1, 4}], 
       Polygon3DBox[{5, 6, 7}], Polygon3DBox[{6, 5, 8}], 
       Polygon3DBox[{5, 2, 4}], Polygon3DBox[{2, 5, 7}], 
       Polygon3DBox[{2, 6, 3}], Polygon3DBox[{6, 2, 7}], 
       Polygon3DBox[{6, 1, 3}], Polygon3DBox[{1, 6, 8}], 
       Polygon3DBox[{5, 1, 8}], Polygon3DBox[{1, 5, 4}]}]},
    ImageSize->{180., 195.44000017153337`},
    ViewPoint->{
     2.8913736498422007`, -1.685627184825979, -0.49861749946610984`},
    ViewVertical->{0.6402839555740533, -0.30633891879342867`, 
     0.7081124329424202}], ",", 
   Graphics3DBox[{
     {RGBColor[0, 0, 1], Opacity[0.2], 
      InterpretationBox[
       ConicHullRegion3DBox[{-3.0846955246886805`, 0., -4.24571915033984}, 
        NCache[{{(-(2 (5 - 5^Rational[1, 2]))^Rational[-1, 2]) (1 + 
            5^Rational[1, 2]), 0, 1}, {0, 1, 
          0}}, {{-1.3763819204711736`, 0, 1}, {0, 1, 0}}], 
        NCache[{{-((Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])/(
             Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2] + 
             Rational[1, 16] (1 + 5^Rational[1, 2])^2))^Rational[1, 2], 
           0, (Rational[-1, 4] (1 + 5^Rational[1, 2])) (Rational[5, 8] + 
             Rational[-1, 8] 5^Rational[1, 2] + 
             Rational[1, 16] (1 + 5^Rational[1, 2])^2)^
            Rational[-1, 2]}}, {{-0.5877852522924731, 
           0, -0.8090169943749475}}]],
       HalfSpace[{((Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2])/(
          Rational[5, 8] + Rational[-1, 8] 5^Rational[1, 2] + 
          Rational[1, 16] (1 + 5^Rational[1, 2])^2))^Rational[1, 2], 
         0, (Rational[1, 4] (1 + 5^Rational[1, 2])) (Rational[5, 8] + 
           Rational[-1, 8] 5^Rational[1, 2] + 
           Rational[1, 16] (1 + 5^Rational[1, 2])^2)^
          Rational[-1, 2]}, {-3.0846955246886805`, 0., -4.24571915033984}]]}, 
     GraphicsComplex3DBox[{{-5., 5., 5.}, {5., -5., 5.}, {5., 5., 
      5.}, {-5., -5., 5.}, {-5., -5., -5.}, {5., 5., -5.}, {
      5., -5., -5.}, {-5., 
      5., -5.}}, {Polygon3DBox[{1, 2, 3}], Polygon3DBox[{2, 1, 4}], 
       Polygon3DBox[{5, 6, 7}], Polygon3DBox[{6, 5, 8}], 
       Polygon3DBox[{5, 2, 4}], Polygon3DBox[{2, 5, 7}], 
       Polygon3DBox[{2, 6, 3}], Polygon3DBox[{6, 2, 7}], 
       Polygon3DBox[{6, 1, 3}], Polygon3DBox[{1, 6, 8}], 
       Polygon3DBox[{5, 1, 8}], Polygon3DBox[{1, 5, 4}]}]},
    ImageSize->{180., 204.78011795487913`},
    ViewPoint->{-1.528392973878084, 2.832607071982348, 1.0441992593158143`},
    ViewVertical->{0.30118676834447683`, 0.6244354612040088, 
     0.7765509456367703}], ",", 
   Graphics3DBox[{
     {RGBColor[0, 0, 1], Opacity[0.2], 
      InterpretationBox[
       ConicHullRegion3DBox[{-2.3275809117888016`, 0., -4.56813474988996}, 
        NCache[{{-Cot[Rational[3, 20] Pi], 0, 1}, {0, 1, 
          0}}, {{-1.9626105055051506`, 0, 1}, {0, 1, 0}}], 
        NCache[{{(-
            Sin[Rational[3, 20] Pi]) (Cos[Rational[3, 20] Pi]^2 + 
             Sin[Rational[3, 20] Pi]^2)^Rational[-1, 2], 
           0, (-Cos[Rational[3, 20] Pi]) (Cos[Rational[3, 20] Pi]^2 + 
             Sin[Rational[3, 20] Pi]^2)^
            Rational[-1, 2]}}, {{-0.45399049973954675`, 
           0, -0.8910065241883679}}]],
       HalfSpace[{
        Sin[Rational[3, 20] Pi] (Cos[Rational[3, 20] Pi]^2 + 
           Sin[Rational[3, 20] Pi]^2)^Rational[-1, 2], 0, 
         Cos[Rational[3, 20] Pi] (Cos[Rational[3, 20] Pi]^2 + 
           Sin[Rational[3, 20] Pi]^2)^Rational[-1, 2]}, {-2.3275809117888016`,
         0., -4.56813474988996}]]}, 
     GraphicsComplex3DBox[{{-5., 5., 5.}, {5., -5., 5.}, {5., 5., 
      5.}, {-5., -5., 5.}, {-5., -5., -5.}, {5., 5., -5.}, {
      5., -5., -5.}, {-5., 
      5., -5.}}, {Polygon3DBox[{1, 2, 3}], Polygon3DBox[{2, 1, 4}], 
       Polygon3DBox[{5, 6, 7}], Polygon3DBox[{6, 5, 8}], 
       Polygon3DBox[{5, 2, 4}], Polygon3DBox[{2, 5, 7}], 
       Polygon3DBox[{2, 6, 3}], Polygon3DBox[{6, 2, 7}], 
       Polygon3DBox[{6, 1, 3}], Polygon3DBox[{1, 6, 8}], 
       Polygon3DBox[{5, 1, 8}], Polygon3DBox[{1, 5, 4}]}]},
    ImageSize->{180., 209.1166674842304},
    ViewPoint->{0.3254487902205682, -3.3007262956165064`, -0.6702902403956942},
    ViewVertical->{0.635315007243943, -0.7510660174413039, 
     0.5128928048438831}], ",", 
   Graphics3DBox[{
     {RGBColor[0, 0, 1], Opacity[0.2], 
      InterpretationBox[
       ConicHullRegion3DBox[{-1.5257010926850014`, 0., -4.695625135606924}, 
        NCache[{{((-1)/(-1 + 5^Rational[1, 2])) (2 (5 + 5^Rational[1, 2]))^
            Rational[1, 2], 0, 1}, {0, 1, 0}}, {{-3.077683537175253, 0, 1}, {
          0, 1, 0}}], 
        NCache[{{(
            Rational[-1, 4] (-1 + 5^Rational[1, 2])) (Rational[5, 8] + 
             Rational[1, 8] 5^Rational[1, 2] + 
             Rational[1, 16] (-1 + 5^Rational[1, 2])^2)^Rational[-1, 2], 
           0, -((Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])/(
             Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2] + 
             Rational[1, 16] (-1 + 5^Rational[1, 2])^2))^
            Rational[1, 2]}}, {{-0.30901699437494745`, 
           0, -0.9510565162951535}}]],
       HalfSpace[{(
          Rational[1, 4] (-1 + 5^Rational[1, 2])) (Rational[5, 8] + 
           Rational[1, 8] 5^Rational[1, 2] + 
           Rational[1, 16] (-1 + 5^Rational[1, 2])^2)^Rational[-1, 2], 
         0, ((Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2])/(
          Rational[5, 8] + Rational[1, 8] 5^Rational[1, 2] + 
          Rational[1, 16] (-1 + 5^Rational[1, 2])^2))^
         Rational[1, 2]}, {-1.5257010926850014`, 0., -4.695625135606924}]]}, 
     GraphicsComplex3DBox[{{-5., 5., 5.}, {5., -5., 5.}, {5., 5., 
      5.}, {-5., -5., 5.}, {-5., -5., -5.}, {5., 5., -5.}, {
      5., -5., -5.}, {-5., 
      5., -5.}}, {Polygon3DBox[{1, 2, 3}], Polygon3DBox[{2, 1, 4}], 
       Polygon3DBox[{5, 6, 7}], Polygon3DBox[{6, 5, 8}], 
       Polygon3DBox[{5, 2, 4}], Polygon3DBox[{2, 5, 7}], 
       Polygon3DBox[{2, 6, 3}], Polygon3DBox[{6, 2, 7}], 
       Polygon3DBox[{6, 1, 3}], Polygon3DBox[{1, 6, 8}], 
       Polygon3DBox[{5, 1, 8}], Polygon3DBox[{1, 5, 4}]}]},
    ImageSize->{180., 210.83577934996399`},
    ViewPoint->{1.502565525097513, -3.019699894595633, 0.2714947317491814},
    ViewVertical->{0.35734076299178935`, -0.504433269387182, 
     0.8473095997288024}], ",", 
   Graphics3DBox[{
     {RGBColor[0, 0, 1], Opacity[0.2], 
      InterpretationBox[
       ConicHullRegion3DBox[{-0.7398437530756458, 0., -4.671189616604227}, 
        NCache[{{-Cot[Rational[1, 20] Pi], 0, 1}, {0, 1, 
          0}}, {{-6.313751514675044, 0, 1}, {0, 1, 0}}], 
        NCache[{{(-
            Sin[Rational[1, 20] Pi]) (Cos[Rational[1, 20] Pi]^2 + 
             Sin[Rational[1, 20] Pi]^2)^Rational[-1, 2], 
           0, (-Cos[Rational[1, 20] Pi]) (Cos[Rational[1, 20] Pi]^2 + 
             Sin[Rational[1, 20] Pi]^2)^
            Rational[-1, 2]}}, {{-0.15643446504023087`, 
           0, -0.9876883405951378}}]],
       HalfSpace[{
        Sin[Rational[1, 20] Pi] (Cos[Rational[1, 20] Pi]^2 + 
           Sin[Rational[1, 20] Pi]^2)^Rational[-1, 2], 0, 
         Cos[Rational[1, 20] Pi] (Cos[Rational[1, 20] Pi]^2 + 
           Sin[Rational[1, 20] Pi]^2)^Rational[-1, 2]}, {-0.7398437530756458, 
        0., -4.671189616604227}]]}, 
     GraphicsComplex3DBox[{{-5., 5., 5.}, {5., -5., 5.}, {5., 5., 
      5.}, {-5., -5., 5.}, {-5., -5., -5.}, {5., 5., -5.}, {
      5., -5., -5.}, {-5., 
      5., -5.}}, {Polygon3DBox[{1, 2, 3}], Polygon3DBox[{2, 1, 4}], 
       Polygon3DBox[{5, 6, 7}], Polygon3DBox[{6, 5, 8}], 
       Polygon3DBox[{5, 2, 4}], Polygon3DBox[{2, 5, 7}], 
       Polygon3DBox[{2, 6, 3}], Polygon3DBox[{6, 2, 7}], 
       Polygon3DBox[{6, 1, 3}], Polygon3DBox[{1, 6, 8}], 
       Polygon3DBox[{5, 1, 8}], Polygon3DBox[{1, 5, 4}]}]},
    ImageSize->{180., 210.50610771403998`},
    ViewPoint->{-0.8210049559268078, -3.277918719180218, -0.1766344609399246},
    
    ViewVertical->{-0.021966926303012817`, -0.7502673915892584, 
     0.7626790364183303}], ",", 
   Graphics3DBox[{
     {RGBColor[0, 0, 1], Opacity[0.2], 
      InterpretationBox[
       ConicHullRegion3DBox[{0., 0., -4.6820542371219105`}, {{0, 1, 0}, {1, 0,
         0}}, {{0, 0, -1}}],
       HalfSpace[{0, 0, 1}, {0., 0., -4.6820542371219105`}]]}, 
     GraphicsComplex3DBox[{{-5., 5., 5.}, {5., -5., 5.}, {5., 5., 
      5.}, {-5., -5., 5.}, {-5., -5., -5.}, {5., 5., -5.}, {
      5., -5., -5.}, {-5., 
      5., -5.}}, {Polygon3DBox[{1, 2, 3}], Polygon3DBox[{2, 1, 4}], 
       Polygon3DBox[{5, 6, 7}], Polygon3DBox[{6, 5, 8}], 
       Polygon3DBox[{5, 2, 4}], Polygon3DBox[{2, 5, 7}], 
       Polygon3DBox[{2, 6, 3}], Polygon3DBox[{6, 2, 7}], 
       Polygon3DBox[{6, 1, 3}], Polygon3DBox[{1, 6, 8}], 
       Polygon3DBox[{5, 1, 8}], Polygon3DBox[{1, 5, 4}]}]},
    ImageSize->{180., 210.65267749823983`},
    ViewPoint->{3.3242903246795397`, 
     0.6158312701578389, -0.14087471007172872`},
    ViewVertical->{0.7589231987993339, -0.12349975934307532`, 
     0.7497819095925404}]}], "}"}]], "Output",
 CellChangeTimes->{3.664777119230113*^9}]
}, Open  ]]
},
WindowSize->{960, 1016},
WindowMargins->{{-10, Automatic}, {Automatic, -8}},
CellContext->Notebook,
FrontEndVersion->"10.3 for Linux x86 (64-bit) (December 10, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 3761, 60, 161, "Input"],
Cell[4322, 82, 7417, 176, 806, "Input"],
Cell[CellGroupData[{
Cell[11764, 262, 231, 3, 61, "Input"],
Cell[11998, 267, 37800, 637, 447, "Output"],
Cell[49801, 906, 257, 6, 36, "Output"]
}, Open  ]],
Cell[50073, 915, 7652, 165, 1099, "Input"],
Cell[CellGroupData[{
Cell[57750, 1084, 522, 12, 44, "Input"],
Cell[58275, 1098, 252, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58564, 1107, 262, 6, 35, "Input"],
Cell[58829, 1115, 115, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58981, 1121, 1642, 33, 161, "Input"],
Cell[60626, 1156, 1865, 38, 852, "Output"],
Cell[62494, 1196, 552, 11, 23, "Message"],
Cell[63049, 1209, 550, 11, 23, "Message"],
Cell[63602, 1222, 549, 11, 23, "Message"],
Cell[64154, 1235, 565, 12, 23, "Message"],
Cell[64722, 1249, 1485, 26, 91, "Message"],
Cell[66210, 1277, 1485, 26, 91, "Message"],
Cell[67698, 1305, 550, 11, 23, "Message"],
Cell[68251, 1318, 550, 11, 23, "Message"],
Cell[68804, 1331, 550, 11, 23, "Message"],
Cell[69357, 1344, 565, 12, 23, "Message"],
Cell[69925, 1358, 1485, 26, 91, "Message"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71447, 1389, 401, 8, 86, "Input"],
Cell[71851, 1399, 12764, 225, 245, "Output"],
Cell[84618, 1626, 12824, 226, 245, "Output"],
Cell[97445, 1854, 11864, 210, 245, "Output"]
}, Open  ]],
Cell[109324, 2067, 2390, 45, 161, "Input"],
Cell[111717, 2114, 927, 24, 136, "Input"],
Cell[CellGroupData[{
Cell[112669, 2142, 665, 18, 35, "Input"],
Cell[113337, 2162, 11019, 220, 65, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124393, 2387, 382, 9, 35, "Input"],
Cell[124778, 2398, 1745, 35, 130, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[126560, 2438, 584, 14, 35, "Input"],
Cell[127147, 2454, 13638, 239, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[140822, 2698, 999, 23, 161, "Input"],
Cell[141824, 2723, 476, 10, 50, "Message"],
Cell[142303, 2735, 514, 11, 23, "Message"],
Cell[142820, 2748, 4139, 61, 171, "Message"],
Cell[146962, 2811, 13391, 329, 501, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160390, 3145, 567, 14, 35, "Input"],
Cell[160960, 3161, 2547, 53, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163544, 3219, 99, 1, 35, "Input"],
Cell[163646, 3222, 18169, 345, 690, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
